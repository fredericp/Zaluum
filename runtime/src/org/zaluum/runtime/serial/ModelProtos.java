// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: org/zaluum/runtime/serial/model.proto

package org.zaluum.runtime.serial;

public final class ModelProtos {
  private ModelProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum BoxType
      implements com.google.protobuf.ProtocolMessageEnum {
    COMPOSED(0, 1),
    INSTANCE(1, 2),
    SCRIPT(2, 3),
    VALUE(3, 4),
    FSM(4, 5),
    CONST(5, 6),
    ;
    
    
    public final int getNumber() { return value; }
    
    public static BoxType valueOf(int value) {
      switch (value) {
        case 1: return COMPOSED;
        case 2: return INSTANCE;
        case 3: return SCRIPT;
        case 4: return VALUE;
        case 5: return FSM;
        case 6: return CONST;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<BoxType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<BoxType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BoxType>() {
            public BoxType findValueByNumber(int number) {
              return BoxType.valueOf(number)
    ;        }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.zaluum.runtime.serial.ModelProtos.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final BoxType[] VALUES = {
      COMPOSED, INSTANCE, SCRIPT, VALUE, FSM, CONST, 
    };
    public static BoxType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    private final int index;
    private final int value;
    private BoxType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    static {
      org.zaluum.runtime.serial.ModelProtos.getDescriptor();
    }
    
    // @@protoc_insertion_point(enum_scope:BoxType)
  }
  
  public static final class ModelFragment extends
      com.google.protobuf.GeneratedMessage {
    // Use ModelFragment.newBuilder() to construct.
    private ModelFragment() {
      initFields();
    }
    private ModelFragment(boolean noInit) {}
    
    private static final ModelFragment defaultInstance;
    public static ModelFragment getDefaultInstance() {
      return defaultInstance;
    }
    
    public ModelFragment getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.zaluum.runtime.serial.ModelProtos.internal_static_ModelFragment_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.zaluum.runtime.serial.ModelProtos.internal_static_ModelFragment_fieldAccessorTable;
    }
    
    // required string fqName = 1;
    public static final int FQNAME_FIELD_NUMBER = 1;
    private boolean hasFqName;
    private java.lang.String fqName_ = "";
    public boolean hasFqName() { return hasFqName; }
    public java.lang.String getFqName() { return fqName_; }
    
    // required .Box fragment = 2;
    public static final int FRAGMENT_FIELD_NUMBER = 2;
    private boolean hasFragment;
    private org.zaluum.runtime.serial.ModelProtos.Box fragment_;
    public boolean hasFragment() { return hasFragment; }
    public org.zaluum.runtime.serial.ModelProtos.Box getFragment() { return fragment_; }
    
    private void initFields() {
      fragment_ = org.zaluum.runtime.serial.ModelProtos.Box.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasFqName) return false;
      if (!hasFragment) return false;
      if (!getFragment().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasFqName()) {
        output.writeString(1, getFqName());
      }
      if (hasFragment()) {
        output.writeMessage(2, getFragment());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasFqName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getFqName());
      }
      if (hasFragment()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getFragment());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.zaluum.runtime.serial.ModelProtos.ModelFragment parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.ModelFragment parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.ModelFragment parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.ModelFragment parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.ModelFragment parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.ModelFragment parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.ModelFragment parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.zaluum.runtime.serial.ModelProtos.ModelFragment parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.zaluum.runtime.serial.ModelProtos.ModelFragment parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.ModelFragment parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.zaluum.runtime.serial.ModelProtos.ModelFragment prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.zaluum.runtime.serial.ModelProtos.ModelFragment result;
      
      // Construct using org.zaluum.runtime.serial.ModelProtos.ModelFragment.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.zaluum.runtime.serial.ModelProtos.ModelFragment();
        return builder;
      }
      
      protected org.zaluum.runtime.serial.ModelProtos.ModelFragment internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.zaluum.runtime.serial.ModelProtos.ModelFragment();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.zaluum.runtime.serial.ModelProtos.ModelFragment.getDescriptor();
      }
      
      public org.zaluum.runtime.serial.ModelProtos.ModelFragment getDefaultInstanceForType() {
        return org.zaluum.runtime.serial.ModelProtos.ModelFragment.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.zaluum.runtime.serial.ModelProtos.ModelFragment build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.zaluum.runtime.serial.ModelProtos.ModelFragment buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.zaluum.runtime.serial.ModelProtos.ModelFragment buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.zaluum.runtime.serial.ModelProtos.ModelFragment returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.zaluum.runtime.serial.ModelProtos.ModelFragment) {
          return mergeFrom((org.zaluum.runtime.serial.ModelProtos.ModelFragment)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.zaluum.runtime.serial.ModelProtos.ModelFragment other) {
        if (other == org.zaluum.runtime.serial.ModelProtos.ModelFragment.getDefaultInstance()) return this;
        if (other.hasFqName()) {
          setFqName(other.getFqName());
        }
        if (other.hasFragment()) {
          mergeFragment(other.getFragment());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setFqName(input.readString());
              break;
            }
            case 18: {
              org.zaluum.runtime.serial.ModelProtos.Box.Builder subBuilder = org.zaluum.runtime.serial.ModelProtos.Box.newBuilder();
              if (hasFragment()) {
                subBuilder.mergeFrom(getFragment());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFragment(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string fqName = 1;
      public boolean hasFqName() {
        return result.hasFqName();
      }
      public java.lang.String getFqName() {
        return result.getFqName();
      }
      public Builder setFqName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasFqName = true;
        result.fqName_ = value;
        return this;
      }
      public Builder clearFqName() {
        result.hasFqName = false;
        result.fqName_ = getDefaultInstance().getFqName();
        return this;
      }
      
      // required .Box fragment = 2;
      public boolean hasFragment() {
        return result.hasFragment();
      }
      public org.zaluum.runtime.serial.ModelProtos.Box getFragment() {
        return result.getFragment();
      }
      public Builder setFragment(org.zaluum.runtime.serial.ModelProtos.Box value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFragment = true;
        result.fragment_ = value;
        return this;
      }
      public Builder setFragment(org.zaluum.runtime.serial.ModelProtos.Box.Builder builderForValue) {
        result.hasFragment = true;
        result.fragment_ = builderForValue.build();
        return this;
      }
      public Builder mergeFragment(org.zaluum.runtime.serial.ModelProtos.Box value) {
        if (result.hasFragment() &&
            result.fragment_ != org.zaluum.runtime.serial.ModelProtos.Box.getDefaultInstance()) {
          result.fragment_ =
            org.zaluum.runtime.serial.ModelProtos.Box.newBuilder(result.fragment_).mergeFrom(value).buildPartial();
        } else {
          result.fragment_ = value;
        }
        result.hasFragment = true;
        return this;
      }
      public Builder clearFragment() {
        result.hasFragment = false;
        result.fragment_ = org.zaluum.runtime.serial.ModelProtos.Box.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:ModelFragment)
    }
    
    static {
      defaultInstance = new ModelFragment(true);
      org.zaluum.runtime.serial.ModelProtos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:ModelFragment)
  }
  
  public static final class PortValue extends
      com.google.protobuf.GeneratedMessage {
    // Use PortValue.newBuilder() to construct.
    private PortValue() {
      initFields();
    }
    private PortValue(boolean noInit) {}
    
    private static final PortValue defaultInstance;
    public static PortValue getDefaultInstance() {
      return defaultInstance;
    }
    
    public PortValue getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.zaluum.runtime.serial.ModelProtos.internal_static_PortValue_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.zaluum.runtime.serial.ModelProtos.internal_static_PortValue_fieldAccessorTable;
    }
    
    // required string box = 1;
    public static final int BOX_FIELD_NUMBER = 1;
    private boolean hasBox;
    private java.lang.String box_ = "";
    public boolean hasBox() { return hasBox; }
    public java.lang.String getBox() { return box_; }
    
    // required string port = 2;
    public static final int PORT_FIELD_NUMBER = 2;
    private boolean hasPort;
    private java.lang.String port_ = "";
    public boolean hasPort() { return hasPort; }
    public java.lang.String getPort() { return port_; }
    
    // required string value = 3;
    public static final int VALUE_FIELD_NUMBER = 3;
    private boolean hasValue;
    private java.lang.String value_ = "";
    public boolean hasValue() { return hasValue; }
    public java.lang.String getValue() { return value_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasBox) return false;
      if (!hasPort) return false;
      if (!hasValue) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasBox()) {
        output.writeString(1, getBox());
      }
      if (hasPort()) {
        output.writeString(2, getPort());
      }
      if (hasValue()) {
        output.writeString(3, getValue());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasBox()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getBox());
      }
      if (hasPort()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getPort());
      }
      if (hasValue()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getValue());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.zaluum.runtime.serial.ModelProtos.PortValue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.PortValue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.PortValue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.PortValue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.PortValue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.PortValue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.PortValue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.zaluum.runtime.serial.ModelProtos.PortValue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.zaluum.runtime.serial.ModelProtos.PortValue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.PortValue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.zaluum.runtime.serial.ModelProtos.PortValue prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.zaluum.runtime.serial.ModelProtos.PortValue result;
      
      // Construct using org.zaluum.runtime.serial.ModelProtos.PortValue.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.zaluum.runtime.serial.ModelProtos.PortValue();
        return builder;
      }
      
      protected org.zaluum.runtime.serial.ModelProtos.PortValue internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.zaluum.runtime.serial.ModelProtos.PortValue();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.zaluum.runtime.serial.ModelProtos.PortValue.getDescriptor();
      }
      
      public org.zaluum.runtime.serial.ModelProtos.PortValue getDefaultInstanceForType() {
        return org.zaluum.runtime.serial.ModelProtos.PortValue.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.zaluum.runtime.serial.ModelProtos.PortValue build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.zaluum.runtime.serial.ModelProtos.PortValue buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.zaluum.runtime.serial.ModelProtos.PortValue buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.zaluum.runtime.serial.ModelProtos.PortValue returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.zaluum.runtime.serial.ModelProtos.PortValue) {
          return mergeFrom((org.zaluum.runtime.serial.ModelProtos.PortValue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.zaluum.runtime.serial.ModelProtos.PortValue other) {
        if (other == org.zaluum.runtime.serial.ModelProtos.PortValue.getDefaultInstance()) return this;
        if (other.hasBox()) {
          setBox(other.getBox());
        }
        if (other.hasPort()) {
          setPort(other.getPort());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setBox(input.readString());
              break;
            }
            case 18: {
              setPort(input.readString());
              break;
            }
            case 26: {
              setValue(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string box = 1;
      public boolean hasBox() {
        return result.hasBox();
      }
      public java.lang.String getBox() {
        return result.getBox();
      }
      public Builder setBox(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasBox = true;
        result.box_ = value;
        return this;
      }
      public Builder clearBox() {
        result.hasBox = false;
        result.box_ = getDefaultInstance().getBox();
        return this;
      }
      
      // required string port = 2;
      public boolean hasPort() {
        return result.hasPort();
      }
      public java.lang.String getPort() {
        return result.getPort();
      }
      public Builder setPort(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPort = true;
        result.port_ = value;
        return this;
      }
      public Builder clearPort() {
        result.hasPort = false;
        result.port_ = getDefaultInstance().getPort();
        return this;
      }
      
      // required string value = 3;
      public boolean hasValue() {
        return result.hasValue();
      }
      public java.lang.String getValue() {
        return result.getValue();
      }
      public Builder setValue(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder clearValue() {
        result.hasValue = false;
        result.value_ = getDefaultInstance().getValue();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:PortValue)
    }
    
    static {
      defaultInstance = new PortValue(true);
      org.zaluum.runtime.serial.ModelProtos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:PortValue)
  }
  
  public static final class DebugValue extends
      com.google.protobuf.GeneratedMessage {
    // Use DebugValue.newBuilder() to construct.
    private DebugValue() {
      initFields();
    }
    private DebugValue(boolean noInit) {}
    
    private static final DebugValue defaultInstance;
    public static DebugValue getDefaultInstance() {
      return defaultInstance;
    }
    
    public DebugValue getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.zaluum.runtime.serial.ModelProtos.internal_static_DebugValue_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.zaluum.runtime.serial.ModelProtos.internal_static_DebugValue_fieldAccessorTable;
    }
    
    // required string fqName = 1;
    public static final int FQNAME_FIELD_NUMBER = 1;
    private boolean hasFqName;
    private java.lang.String fqName_ = "";
    public boolean hasFqName() { return hasFqName; }
    public java.lang.String getFqName() { return fqName_; }
    
    // repeated .PortValue value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private java.util.List<org.zaluum.runtime.serial.ModelProtos.PortValue> value_ =
      java.util.Collections.emptyList();
    public java.util.List<org.zaluum.runtime.serial.ModelProtos.PortValue> getValueList() {
      return value_;
    }
    public int getValueCount() { return value_.size(); }
    public org.zaluum.runtime.serial.ModelProtos.PortValue getValue(int index) {
      return value_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasFqName) return false;
      for (org.zaluum.runtime.serial.ModelProtos.PortValue element : getValueList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasFqName()) {
        output.writeString(1, getFqName());
      }
      for (org.zaluum.runtime.serial.ModelProtos.PortValue element : getValueList()) {
        output.writeMessage(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasFqName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getFqName());
      }
      for (org.zaluum.runtime.serial.ModelProtos.PortValue element : getValueList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.zaluum.runtime.serial.ModelProtos.DebugValue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.DebugValue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.DebugValue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.DebugValue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.DebugValue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.DebugValue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.DebugValue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.zaluum.runtime.serial.ModelProtos.DebugValue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.zaluum.runtime.serial.ModelProtos.DebugValue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.DebugValue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.zaluum.runtime.serial.ModelProtos.DebugValue prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.zaluum.runtime.serial.ModelProtos.DebugValue result;
      
      // Construct using org.zaluum.runtime.serial.ModelProtos.DebugValue.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.zaluum.runtime.serial.ModelProtos.DebugValue();
        return builder;
      }
      
      protected org.zaluum.runtime.serial.ModelProtos.DebugValue internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.zaluum.runtime.serial.ModelProtos.DebugValue();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.zaluum.runtime.serial.ModelProtos.DebugValue.getDescriptor();
      }
      
      public org.zaluum.runtime.serial.ModelProtos.DebugValue getDefaultInstanceForType() {
        return org.zaluum.runtime.serial.ModelProtos.DebugValue.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.zaluum.runtime.serial.ModelProtos.DebugValue build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.zaluum.runtime.serial.ModelProtos.DebugValue buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.zaluum.runtime.serial.ModelProtos.DebugValue buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.value_ != java.util.Collections.EMPTY_LIST) {
          result.value_ =
            java.util.Collections.unmodifiableList(result.value_);
        }
        org.zaluum.runtime.serial.ModelProtos.DebugValue returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.zaluum.runtime.serial.ModelProtos.DebugValue) {
          return mergeFrom((org.zaluum.runtime.serial.ModelProtos.DebugValue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.zaluum.runtime.serial.ModelProtos.DebugValue other) {
        if (other == org.zaluum.runtime.serial.ModelProtos.DebugValue.getDefaultInstance()) return this;
        if (other.hasFqName()) {
          setFqName(other.getFqName());
        }
        if (!other.value_.isEmpty()) {
          if (result.value_.isEmpty()) {
            result.value_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.PortValue>();
          }
          result.value_.addAll(other.value_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setFqName(input.readString());
              break;
            }
            case 18: {
              org.zaluum.runtime.serial.ModelProtos.PortValue.Builder subBuilder = org.zaluum.runtime.serial.ModelProtos.PortValue.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addValue(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string fqName = 1;
      public boolean hasFqName() {
        return result.hasFqName();
      }
      public java.lang.String getFqName() {
        return result.getFqName();
      }
      public Builder setFqName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasFqName = true;
        result.fqName_ = value;
        return this;
      }
      public Builder clearFqName() {
        result.hasFqName = false;
        result.fqName_ = getDefaultInstance().getFqName();
        return this;
      }
      
      // repeated .PortValue value = 2;
      public java.util.List<org.zaluum.runtime.serial.ModelProtos.PortValue> getValueList() {
        return java.util.Collections.unmodifiableList(result.value_);
      }
      public int getValueCount() {
        return result.getValueCount();
      }
      public org.zaluum.runtime.serial.ModelProtos.PortValue getValue(int index) {
        return result.getValue(index);
      }
      public Builder setValue(int index, org.zaluum.runtime.serial.ModelProtos.PortValue value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.value_.set(index, value);
        return this;
      }
      public Builder setValue(int index, org.zaluum.runtime.serial.ModelProtos.PortValue.Builder builderForValue) {
        result.value_.set(index, builderForValue.build());
        return this;
      }
      public Builder addValue(org.zaluum.runtime.serial.ModelProtos.PortValue value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.value_.isEmpty()) {
          result.value_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.PortValue>();
        }
        result.value_.add(value);
        return this;
      }
      public Builder addValue(org.zaluum.runtime.serial.ModelProtos.PortValue.Builder builderForValue) {
        if (result.value_.isEmpty()) {
          result.value_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.PortValue>();
        }
        result.value_.add(builderForValue.build());
        return this;
      }
      public Builder addAllValue(
          java.lang.Iterable<? extends org.zaluum.runtime.serial.ModelProtos.PortValue> values) {
        if (result.value_.isEmpty()) {
          result.value_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.PortValue>();
        }
        super.addAll(values, result.value_);
        return this;
      }
      public Builder clearValue() {
        result.value_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:DebugValue)
    }
    
    static {
      defaultInstance = new DebugValue(true);
      org.zaluum.runtime.serial.ModelProtos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:DebugValue)
  }
  
  public static final class Point extends
      com.google.protobuf.GeneratedMessage {
    // Use Point.newBuilder() to construct.
    private Point() {
      initFields();
    }
    private Point(boolean noInit) {}
    
    private static final Point defaultInstance;
    public static Point getDefaultInstance() {
      return defaultInstance;
    }
    
    public Point getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.zaluum.runtime.serial.ModelProtos.internal_static_Point_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.zaluum.runtime.serial.ModelProtos.internal_static_Point_fieldAccessorTable;
    }
    
    // required int32 x = 1;
    public static final int X_FIELD_NUMBER = 1;
    private boolean hasX;
    private int x_ = 0;
    public boolean hasX() { return hasX; }
    public int getX() { return x_; }
    
    // required int32 y = 2;
    public static final int Y_FIELD_NUMBER = 2;
    private boolean hasY;
    private int y_ = 0;
    public boolean hasY() { return hasY; }
    public int getY() { return y_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasX) return false;
      if (!hasY) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasX()) {
        output.writeInt32(1, getX());
      }
      if (hasY()) {
        output.writeInt32(2, getY());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasX()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getX());
      }
      if (hasY()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getY());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.zaluum.runtime.serial.ModelProtos.Point parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Point parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Point parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Point parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Point parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Point parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Point parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.zaluum.runtime.serial.ModelProtos.Point parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.zaluum.runtime.serial.ModelProtos.Point parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Point parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.zaluum.runtime.serial.ModelProtos.Point prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.zaluum.runtime.serial.ModelProtos.Point result;
      
      // Construct using org.zaluum.runtime.serial.ModelProtos.Point.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.zaluum.runtime.serial.ModelProtos.Point();
        return builder;
      }
      
      protected org.zaluum.runtime.serial.ModelProtos.Point internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.zaluum.runtime.serial.ModelProtos.Point();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.zaluum.runtime.serial.ModelProtos.Point.getDescriptor();
      }
      
      public org.zaluum.runtime.serial.ModelProtos.Point getDefaultInstanceForType() {
        return org.zaluum.runtime.serial.ModelProtos.Point.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.zaluum.runtime.serial.ModelProtos.Point build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.zaluum.runtime.serial.ModelProtos.Point buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.zaluum.runtime.serial.ModelProtos.Point buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.zaluum.runtime.serial.ModelProtos.Point returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.zaluum.runtime.serial.ModelProtos.Point) {
          return mergeFrom((org.zaluum.runtime.serial.ModelProtos.Point)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.zaluum.runtime.serial.ModelProtos.Point other) {
        if (other == org.zaluum.runtime.serial.ModelProtos.Point.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setX(input.readInt32());
              break;
            }
            case 16: {
              setY(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // required int32 x = 1;
      public boolean hasX() {
        return result.hasX();
      }
      public int getX() {
        return result.getX();
      }
      public Builder setX(int value) {
        result.hasX = true;
        result.x_ = value;
        return this;
      }
      public Builder clearX() {
        result.hasX = false;
        result.x_ = 0;
        return this;
      }
      
      // required int32 y = 2;
      public boolean hasY() {
        return result.hasY();
      }
      public int getY() {
        return result.getY();
      }
      public Builder setY(int value) {
        result.hasY = true;
        result.y_ = value;
        return this;
      }
      public Builder clearY() {
        result.hasY = false;
        result.y_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:Point)
    }
    
    static {
      defaultInstance = new Point(true);
      org.zaluum.runtime.serial.ModelProtos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Point)
  }
  
  public static final class Rectangle extends
      com.google.protobuf.GeneratedMessage {
    // Use Rectangle.newBuilder() to construct.
    private Rectangle() {
      initFields();
    }
    private Rectangle(boolean noInit) {}
    
    private static final Rectangle defaultInstance;
    public static Rectangle getDefaultInstance() {
      return defaultInstance;
    }
    
    public Rectangle getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.zaluum.runtime.serial.ModelProtos.internal_static_Rectangle_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.zaluum.runtime.serial.ModelProtos.internal_static_Rectangle_fieldAccessorTable;
    }
    
    // required .Point left_up = 1;
    public static final int LEFT_UP_FIELD_NUMBER = 1;
    private boolean hasLeftUp;
    private org.zaluum.runtime.serial.ModelProtos.Point leftUp_;
    public boolean hasLeftUp() { return hasLeftUp; }
    public org.zaluum.runtime.serial.ModelProtos.Point getLeftUp() { return leftUp_; }
    
    // required .Point right_down = 2;
    public static final int RIGHT_DOWN_FIELD_NUMBER = 2;
    private boolean hasRightDown;
    private org.zaluum.runtime.serial.ModelProtos.Point rightDown_;
    public boolean hasRightDown() { return hasRightDown; }
    public org.zaluum.runtime.serial.ModelProtos.Point getRightDown() { return rightDown_; }
    
    private void initFields() {
      leftUp_ = org.zaluum.runtime.serial.ModelProtos.Point.getDefaultInstance();
      rightDown_ = org.zaluum.runtime.serial.ModelProtos.Point.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasLeftUp) return false;
      if (!hasRightDown) return false;
      if (!getLeftUp().isInitialized()) return false;
      if (!getRightDown().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasLeftUp()) {
        output.writeMessage(1, getLeftUp());
      }
      if (hasRightDown()) {
        output.writeMessage(2, getRightDown());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasLeftUp()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getLeftUp());
      }
      if (hasRightDown()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getRightDown());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.zaluum.runtime.serial.ModelProtos.Rectangle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Rectangle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Rectangle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Rectangle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Rectangle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Rectangle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Rectangle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.zaluum.runtime.serial.ModelProtos.Rectangle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.zaluum.runtime.serial.ModelProtos.Rectangle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Rectangle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.zaluum.runtime.serial.ModelProtos.Rectangle prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.zaluum.runtime.serial.ModelProtos.Rectangle result;
      
      // Construct using org.zaluum.runtime.serial.ModelProtos.Rectangle.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.zaluum.runtime.serial.ModelProtos.Rectangle();
        return builder;
      }
      
      protected org.zaluum.runtime.serial.ModelProtos.Rectangle internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.zaluum.runtime.serial.ModelProtos.Rectangle();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.zaluum.runtime.serial.ModelProtos.Rectangle.getDescriptor();
      }
      
      public org.zaluum.runtime.serial.ModelProtos.Rectangle getDefaultInstanceForType() {
        return org.zaluum.runtime.serial.ModelProtos.Rectangle.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.zaluum.runtime.serial.ModelProtos.Rectangle build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.zaluum.runtime.serial.ModelProtos.Rectangle buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.zaluum.runtime.serial.ModelProtos.Rectangle buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.zaluum.runtime.serial.ModelProtos.Rectangle returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.zaluum.runtime.serial.ModelProtos.Rectangle) {
          return mergeFrom((org.zaluum.runtime.serial.ModelProtos.Rectangle)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.zaluum.runtime.serial.ModelProtos.Rectangle other) {
        if (other == org.zaluum.runtime.serial.ModelProtos.Rectangle.getDefaultInstance()) return this;
        if (other.hasLeftUp()) {
          mergeLeftUp(other.getLeftUp());
        }
        if (other.hasRightDown()) {
          mergeRightDown(other.getRightDown());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              org.zaluum.runtime.serial.ModelProtos.Point.Builder subBuilder = org.zaluum.runtime.serial.ModelProtos.Point.newBuilder();
              if (hasLeftUp()) {
                subBuilder.mergeFrom(getLeftUp());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setLeftUp(subBuilder.buildPartial());
              break;
            }
            case 18: {
              org.zaluum.runtime.serial.ModelProtos.Point.Builder subBuilder = org.zaluum.runtime.serial.ModelProtos.Point.newBuilder();
              if (hasRightDown()) {
                subBuilder.mergeFrom(getRightDown());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setRightDown(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .Point left_up = 1;
      public boolean hasLeftUp() {
        return result.hasLeftUp();
      }
      public org.zaluum.runtime.serial.ModelProtos.Point getLeftUp() {
        return result.getLeftUp();
      }
      public Builder setLeftUp(org.zaluum.runtime.serial.ModelProtos.Point value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasLeftUp = true;
        result.leftUp_ = value;
        return this;
      }
      public Builder setLeftUp(org.zaluum.runtime.serial.ModelProtos.Point.Builder builderForValue) {
        result.hasLeftUp = true;
        result.leftUp_ = builderForValue.build();
        return this;
      }
      public Builder mergeLeftUp(org.zaluum.runtime.serial.ModelProtos.Point value) {
        if (result.hasLeftUp() &&
            result.leftUp_ != org.zaluum.runtime.serial.ModelProtos.Point.getDefaultInstance()) {
          result.leftUp_ =
            org.zaluum.runtime.serial.ModelProtos.Point.newBuilder(result.leftUp_).mergeFrom(value).buildPartial();
        } else {
          result.leftUp_ = value;
        }
        result.hasLeftUp = true;
        return this;
      }
      public Builder clearLeftUp() {
        result.hasLeftUp = false;
        result.leftUp_ = org.zaluum.runtime.serial.ModelProtos.Point.getDefaultInstance();
        return this;
      }
      
      // required .Point right_down = 2;
      public boolean hasRightDown() {
        return result.hasRightDown();
      }
      public org.zaluum.runtime.serial.ModelProtos.Point getRightDown() {
        return result.getRightDown();
      }
      public Builder setRightDown(org.zaluum.runtime.serial.ModelProtos.Point value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasRightDown = true;
        result.rightDown_ = value;
        return this;
      }
      public Builder setRightDown(org.zaluum.runtime.serial.ModelProtos.Point.Builder builderForValue) {
        result.hasRightDown = true;
        result.rightDown_ = builderForValue.build();
        return this;
      }
      public Builder mergeRightDown(org.zaluum.runtime.serial.ModelProtos.Point value) {
        if (result.hasRightDown() &&
            result.rightDown_ != org.zaluum.runtime.serial.ModelProtos.Point.getDefaultInstance()) {
          result.rightDown_ =
            org.zaluum.runtime.serial.ModelProtos.Point.newBuilder(result.rightDown_).mergeFrom(value).buildPartial();
        } else {
          result.rightDown_ = value;
        }
        result.hasRightDown = true;
        return this;
      }
      public Builder clearRightDown() {
        result.hasRightDown = false;
        result.rightDown_ = org.zaluum.runtime.serial.ModelProtos.Point.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:Rectangle)
    }
    
    static {
      defaultInstance = new Rectangle(true);
      org.zaluum.runtime.serial.ModelProtos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Rectangle)
  }
  
  public static final class Port extends
      com.google.protobuf.GeneratedMessage {
    // Use Port.newBuilder() to construct.
    private Port() {
      initFields();
    }
    private Port(boolean noInit) {}
    
    private static final Port defaultInstance;
    public static Port getDefaultInstance() {
      return defaultInstance;
    }
    
    public Port getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.zaluum.runtime.serial.ModelProtos.internal_static_Port_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.zaluum.runtime.serial.ModelProtos.internal_static_Port_fieldAccessorTable;
    }
    
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // required string type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private boolean hasType;
    private java.lang.String type_ = "";
    public boolean hasType() { return hasType; }
    public java.lang.String getType() { return type_; }
    
    // required bool in = 3;
    public static final int IN_FIELD_NUMBER = 3;
    private boolean hasIn;
    private boolean in_ = false;
    public boolean hasIn() { return hasIn; }
    public boolean getIn() { return in_; }
    
    // required bool direct = 4;
    public static final int DIRECT_FIELD_NUMBER = 4;
    private boolean hasDirect;
    private boolean direct_ = false;
    public boolean hasDirect() { return hasDirect; }
    public boolean getDirect() { return direct_; }
    
    // required .Point position = 5;
    public static final int POSITION_FIELD_NUMBER = 5;
    private boolean hasPosition;
    private org.zaluum.runtime.serial.ModelProtos.Point position_;
    public boolean hasPosition() { return hasPosition; }
    public org.zaluum.runtime.serial.ModelProtos.Point getPosition() { return position_; }
    
    // optional uint32 slot = 6;
    public static final int SLOT_FIELD_NUMBER = 6;
    private boolean hasSlot;
    private int slot_ = 0;
    public boolean hasSlot() { return hasSlot; }
    public int getSlot() { return slot_; }
    
    // optional bool left = 7;
    public static final int LEFT_FIELD_NUMBER = 7;
    private boolean hasLeft;
    private boolean left_ = false;
    public boolean hasLeft() { return hasLeft; }
    public boolean getLeft() { return left_; }
    
    // optional string label = 8;
    public static final int LABEL_FIELD_NUMBER = 8;
    private boolean hasLabel;
    private java.lang.String label_ = "";
    public boolean hasLabel() { return hasLabel; }
    public java.lang.String getLabel() { return label_; }
    
    private void initFields() {
      position_ = org.zaluum.runtime.serial.ModelProtos.Point.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasName) return false;
      if (!hasType) return false;
      if (!hasIn) return false;
      if (!hasDirect) return false;
      if (!hasPosition) return false;
      if (!getPosition().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasName()) {
        output.writeString(1, getName());
      }
      if (hasType()) {
        output.writeString(2, getType());
      }
      if (hasIn()) {
        output.writeBool(3, getIn());
      }
      if (hasDirect()) {
        output.writeBool(4, getDirect());
      }
      if (hasPosition()) {
        output.writeMessage(5, getPosition());
      }
      if (hasSlot()) {
        output.writeUInt32(6, getSlot());
      }
      if (hasLeft()) {
        output.writeBool(7, getLeft());
      }
      if (hasLabel()) {
        output.writeString(8, getLabel());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getType());
      }
      if (hasIn()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, getIn());
      }
      if (hasDirect()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, getDirect());
      }
      if (hasPosition()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getPosition());
      }
      if (hasSlot()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, getSlot());
      }
      if (hasLeft()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, getLeft());
      }
      if (hasLabel()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(8, getLabel());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.zaluum.runtime.serial.ModelProtos.Port parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Port parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Port parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Port parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Port parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Port parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Port parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.zaluum.runtime.serial.ModelProtos.Port parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.zaluum.runtime.serial.ModelProtos.Port parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Port parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.zaluum.runtime.serial.ModelProtos.Port prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.zaluum.runtime.serial.ModelProtos.Port result;
      
      // Construct using org.zaluum.runtime.serial.ModelProtos.Port.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.zaluum.runtime.serial.ModelProtos.Port();
        return builder;
      }
      
      protected org.zaluum.runtime.serial.ModelProtos.Port internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.zaluum.runtime.serial.ModelProtos.Port();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.zaluum.runtime.serial.ModelProtos.Port.getDescriptor();
      }
      
      public org.zaluum.runtime.serial.ModelProtos.Port getDefaultInstanceForType() {
        return org.zaluum.runtime.serial.ModelProtos.Port.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.zaluum.runtime.serial.ModelProtos.Port build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.zaluum.runtime.serial.ModelProtos.Port buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.zaluum.runtime.serial.ModelProtos.Port buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.zaluum.runtime.serial.ModelProtos.Port returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.zaluum.runtime.serial.ModelProtos.Port) {
          return mergeFrom((org.zaluum.runtime.serial.ModelProtos.Port)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.zaluum.runtime.serial.ModelProtos.Port other) {
        if (other == org.zaluum.runtime.serial.ModelProtos.Port.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasIn()) {
          setIn(other.getIn());
        }
        if (other.hasDirect()) {
          setDirect(other.getDirect());
        }
        if (other.hasPosition()) {
          mergePosition(other.getPosition());
        }
        if (other.hasSlot()) {
          setSlot(other.getSlot());
        }
        if (other.hasLeft()) {
          setLeft(other.getLeft());
        }
        if (other.hasLabel()) {
          setLabel(other.getLabel());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
            case 18: {
              setType(input.readString());
              break;
            }
            case 24: {
              setIn(input.readBool());
              break;
            }
            case 32: {
              setDirect(input.readBool());
              break;
            }
            case 42: {
              org.zaluum.runtime.serial.ModelProtos.Point.Builder subBuilder = org.zaluum.runtime.serial.ModelProtos.Point.newBuilder();
              if (hasPosition()) {
                subBuilder.mergeFrom(getPosition());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setPosition(subBuilder.buildPartial());
              break;
            }
            case 48: {
              setSlot(input.readUInt32());
              break;
            }
            case 56: {
              setLeft(input.readBool());
              break;
            }
            case 66: {
              setLabel(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // required string type = 2;
      public boolean hasType() {
        return result.hasType();
      }
      public java.lang.String getType() {
        return result.getType();
      }
      public Builder setType(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = getDefaultInstance().getType();
        return this;
      }
      
      // required bool in = 3;
      public boolean hasIn() {
        return result.hasIn();
      }
      public boolean getIn() {
        return result.getIn();
      }
      public Builder setIn(boolean value) {
        result.hasIn = true;
        result.in_ = value;
        return this;
      }
      public Builder clearIn() {
        result.hasIn = false;
        result.in_ = false;
        return this;
      }
      
      // required bool direct = 4;
      public boolean hasDirect() {
        return result.hasDirect();
      }
      public boolean getDirect() {
        return result.getDirect();
      }
      public Builder setDirect(boolean value) {
        result.hasDirect = true;
        result.direct_ = value;
        return this;
      }
      public Builder clearDirect() {
        result.hasDirect = false;
        result.direct_ = false;
        return this;
      }
      
      // required .Point position = 5;
      public boolean hasPosition() {
        return result.hasPosition();
      }
      public org.zaluum.runtime.serial.ModelProtos.Point getPosition() {
        return result.getPosition();
      }
      public Builder setPosition(org.zaluum.runtime.serial.ModelProtos.Point value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasPosition = true;
        result.position_ = value;
        return this;
      }
      public Builder setPosition(org.zaluum.runtime.serial.ModelProtos.Point.Builder builderForValue) {
        result.hasPosition = true;
        result.position_ = builderForValue.build();
        return this;
      }
      public Builder mergePosition(org.zaluum.runtime.serial.ModelProtos.Point value) {
        if (result.hasPosition() &&
            result.position_ != org.zaluum.runtime.serial.ModelProtos.Point.getDefaultInstance()) {
          result.position_ =
            org.zaluum.runtime.serial.ModelProtos.Point.newBuilder(result.position_).mergeFrom(value).buildPartial();
        } else {
          result.position_ = value;
        }
        result.hasPosition = true;
        return this;
      }
      public Builder clearPosition() {
        result.hasPosition = false;
        result.position_ = org.zaluum.runtime.serial.ModelProtos.Point.getDefaultInstance();
        return this;
      }
      
      // optional uint32 slot = 6;
      public boolean hasSlot() {
        return result.hasSlot();
      }
      public int getSlot() {
        return result.getSlot();
      }
      public Builder setSlot(int value) {
        result.hasSlot = true;
        result.slot_ = value;
        return this;
      }
      public Builder clearSlot() {
        result.hasSlot = false;
        result.slot_ = 0;
        return this;
      }
      
      // optional bool left = 7;
      public boolean hasLeft() {
        return result.hasLeft();
      }
      public boolean getLeft() {
        return result.getLeft();
      }
      public Builder setLeft(boolean value) {
        result.hasLeft = true;
        result.left_ = value;
        return this;
      }
      public Builder clearLeft() {
        result.hasLeft = false;
        result.left_ = false;
        return this;
      }
      
      // optional string label = 8;
      public boolean hasLabel() {
        return result.hasLabel();
      }
      public java.lang.String getLabel() {
        return result.getLabel();
      }
      public Builder setLabel(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasLabel = true;
        result.label_ = value;
        return this;
      }
      public Builder clearLabel() {
        result.hasLabel = false;
        result.label_ = getDefaultInstance().getLabel();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:Port)
    }
    
    static {
      defaultInstance = new Port(true);
      org.zaluum.runtime.serial.ModelProtos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Port)
  }
  
  public static final class Bendpoint extends
      com.google.protobuf.GeneratedMessage {
    // Use Bendpoint.newBuilder() to construct.
    private Bendpoint() {
      initFields();
    }
    private Bendpoint(boolean noInit) {}
    
    private static final Bendpoint defaultInstance;
    public static Bendpoint getDefaultInstance() {
      return defaultInstance;
    }
    
    public Bendpoint getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.zaluum.runtime.serial.ModelProtos.internal_static_Bendpoint_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.zaluum.runtime.serial.ModelProtos.internal_static_Bendpoint_fieldAccessorTable;
    }
    
    // required .Point p1 = 1;
    public static final int P1_FIELD_NUMBER = 1;
    private boolean hasP1;
    private org.zaluum.runtime.serial.ModelProtos.Point p1_;
    public boolean hasP1() { return hasP1; }
    public org.zaluum.runtime.serial.ModelProtos.Point getP1() { return p1_; }
    
    // optional .Point p2 = 2;
    public static final int P2_FIELD_NUMBER = 2;
    private boolean hasP2;
    private org.zaluum.runtime.serial.ModelProtos.Point p2_;
    public boolean hasP2() { return hasP2; }
    public org.zaluum.runtime.serial.ModelProtos.Point getP2() { return p2_; }
    
    // optional float weight = 3;
    public static final int WEIGHT_FIELD_NUMBER = 3;
    private boolean hasWeight;
    private float weight_ = 0F;
    public boolean hasWeight() { return hasWeight; }
    public float getWeight() { return weight_; }
    
    private void initFields() {
      p1_ = org.zaluum.runtime.serial.ModelProtos.Point.getDefaultInstance();
      p2_ = org.zaluum.runtime.serial.ModelProtos.Point.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasP1) return false;
      if (!getP1().isInitialized()) return false;
      if (hasP2()) {
        if (!getP2().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasP1()) {
        output.writeMessage(1, getP1());
      }
      if (hasP2()) {
        output.writeMessage(2, getP2());
      }
      if (hasWeight()) {
        output.writeFloat(3, getWeight());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasP1()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getP1());
      }
      if (hasP2()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getP2());
      }
      if (hasWeight()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, getWeight());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.zaluum.runtime.serial.ModelProtos.Bendpoint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Bendpoint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Bendpoint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Bendpoint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Bendpoint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Bendpoint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Bendpoint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.zaluum.runtime.serial.ModelProtos.Bendpoint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.zaluum.runtime.serial.ModelProtos.Bendpoint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Bendpoint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.zaluum.runtime.serial.ModelProtos.Bendpoint prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.zaluum.runtime.serial.ModelProtos.Bendpoint result;
      
      // Construct using org.zaluum.runtime.serial.ModelProtos.Bendpoint.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.zaluum.runtime.serial.ModelProtos.Bendpoint();
        return builder;
      }
      
      protected org.zaluum.runtime.serial.ModelProtos.Bendpoint internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.zaluum.runtime.serial.ModelProtos.Bendpoint();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.zaluum.runtime.serial.ModelProtos.Bendpoint.getDescriptor();
      }
      
      public org.zaluum.runtime.serial.ModelProtos.Bendpoint getDefaultInstanceForType() {
        return org.zaluum.runtime.serial.ModelProtos.Bendpoint.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.zaluum.runtime.serial.ModelProtos.Bendpoint build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.zaluum.runtime.serial.ModelProtos.Bendpoint buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.zaluum.runtime.serial.ModelProtos.Bendpoint buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.zaluum.runtime.serial.ModelProtos.Bendpoint returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.zaluum.runtime.serial.ModelProtos.Bendpoint) {
          return mergeFrom((org.zaluum.runtime.serial.ModelProtos.Bendpoint)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.zaluum.runtime.serial.ModelProtos.Bendpoint other) {
        if (other == org.zaluum.runtime.serial.ModelProtos.Bendpoint.getDefaultInstance()) return this;
        if (other.hasP1()) {
          mergeP1(other.getP1());
        }
        if (other.hasP2()) {
          mergeP2(other.getP2());
        }
        if (other.hasWeight()) {
          setWeight(other.getWeight());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              org.zaluum.runtime.serial.ModelProtos.Point.Builder subBuilder = org.zaluum.runtime.serial.ModelProtos.Point.newBuilder();
              if (hasP1()) {
                subBuilder.mergeFrom(getP1());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setP1(subBuilder.buildPartial());
              break;
            }
            case 18: {
              org.zaluum.runtime.serial.ModelProtos.Point.Builder subBuilder = org.zaluum.runtime.serial.ModelProtos.Point.newBuilder();
              if (hasP2()) {
                subBuilder.mergeFrom(getP2());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setP2(subBuilder.buildPartial());
              break;
            }
            case 29: {
              setWeight(input.readFloat());
              break;
            }
          }
        }
      }
      
      
      // required .Point p1 = 1;
      public boolean hasP1() {
        return result.hasP1();
      }
      public org.zaluum.runtime.serial.ModelProtos.Point getP1() {
        return result.getP1();
      }
      public Builder setP1(org.zaluum.runtime.serial.ModelProtos.Point value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasP1 = true;
        result.p1_ = value;
        return this;
      }
      public Builder setP1(org.zaluum.runtime.serial.ModelProtos.Point.Builder builderForValue) {
        result.hasP1 = true;
        result.p1_ = builderForValue.build();
        return this;
      }
      public Builder mergeP1(org.zaluum.runtime.serial.ModelProtos.Point value) {
        if (result.hasP1() &&
            result.p1_ != org.zaluum.runtime.serial.ModelProtos.Point.getDefaultInstance()) {
          result.p1_ =
            org.zaluum.runtime.serial.ModelProtos.Point.newBuilder(result.p1_).mergeFrom(value).buildPartial();
        } else {
          result.p1_ = value;
        }
        result.hasP1 = true;
        return this;
      }
      public Builder clearP1() {
        result.hasP1 = false;
        result.p1_ = org.zaluum.runtime.serial.ModelProtos.Point.getDefaultInstance();
        return this;
      }
      
      // optional .Point p2 = 2;
      public boolean hasP2() {
        return result.hasP2();
      }
      public org.zaluum.runtime.serial.ModelProtos.Point getP2() {
        return result.getP2();
      }
      public Builder setP2(org.zaluum.runtime.serial.ModelProtos.Point value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasP2 = true;
        result.p2_ = value;
        return this;
      }
      public Builder setP2(org.zaluum.runtime.serial.ModelProtos.Point.Builder builderForValue) {
        result.hasP2 = true;
        result.p2_ = builderForValue.build();
        return this;
      }
      public Builder mergeP2(org.zaluum.runtime.serial.ModelProtos.Point value) {
        if (result.hasP2() &&
            result.p2_ != org.zaluum.runtime.serial.ModelProtos.Point.getDefaultInstance()) {
          result.p2_ =
            org.zaluum.runtime.serial.ModelProtos.Point.newBuilder(result.p2_).mergeFrom(value).buildPartial();
        } else {
          result.p2_ = value;
        }
        result.hasP2 = true;
        return this;
      }
      public Builder clearP2() {
        result.hasP2 = false;
        result.p2_ = org.zaluum.runtime.serial.ModelProtos.Point.getDefaultInstance();
        return this;
      }
      
      // optional float weight = 3;
      public boolean hasWeight() {
        return result.hasWeight();
      }
      public float getWeight() {
        return result.getWeight();
      }
      public Builder setWeight(float value) {
        result.hasWeight = true;
        result.weight_ = value;
        return this;
      }
      public Builder clearWeight() {
        result.hasWeight = false;
        result.weight_ = 0F;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:Bendpoint)
    }
    
    static {
      defaultInstance = new Bendpoint(true);
      org.zaluum.runtime.serial.ModelProtos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Bendpoint)
  }
  
  public static final class Line extends
      com.google.protobuf.GeneratedMessage {
    // Use Line.newBuilder() to construct.
    private Line() {
      initFields();
    }
    private Line(boolean noInit) {}
    
    private static final Line defaultInstance;
    public static Line getDefaultInstance() {
      return defaultInstance;
    }
    
    public Line getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.zaluum.runtime.serial.ModelProtos.internal_static_Line_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.zaluum.runtime.serial.ModelProtos.internal_static_Line_fieldAccessorTable;
    }
    
    // required string from = 1;
    public static final int FROM_FIELD_NUMBER = 1;
    private boolean hasFrom;
    private java.lang.String from_ = "";
    public boolean hasFrom() { return hasFrom; }
    public java.lang.String getFrom() { return from_; }
    
    // required string to = 2;
    public static final int TO_FIELD_NUMBER = 2;
    private boolean hasTo;
    private java.lang.String to_ = "";
    public boolean hasTo() { return hasTo; }
    public java.lang.String getTo() { return to_; }
    
    // repeated .Bendpoint bendpoint = 3;
    public static final int BENDPOINT_FIELD_NUMBER = 3;
    private java.util.List<org.zaluum.runtime.serial.ModelProtos.Bendpoint> bendpoint_ =
      java.util.Collections.emptyList();
    public java.util.List<org.zaluum.runtime.serial.ModelProtos.Bendpoint> getBendpointList() {
      return bendpoint_;
    }
    public int getBendpointCount() { return bendpoint_.size(); }
    public org.zaluum.runtime.serial.ModelProtos.Bendpoint getBendpoint(int index) {
      return bendpoint_.get(index);
    }
    
    // optional string str = 4;
    public static final int STR_FIELD_NUMBER = 4;
    private boolean hasStr;
    private java.lang.String str_ = "";
    public boolean hasStr() { return hasStr; }
    public java.lang.String getStr() { return str_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasFrom) return false;
      if (!hasTo) return false;
      for (org.zaluum.runtime.serial.ModelProtos.Bendpoint element : getBendpointList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasFrom()) {
        output.writeString(1, getFrom());
      }
      if (hasTo()) {
        output.writeString(2, getTo());
      }
      for (org.zaluum.runtime.serial.ModelProtos.Bendpoint element : getBendpointList()) {
        output.writeMessage(3, element);
      }
      if (hasStr()) {
        output.writeString(4, getStr());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasFrom()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getFrom());
      }
      if (hasTo()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getTo());
      }
      for (org.zaluum.runtime.serial.ModelProtos.Bendpoint element : getBendpointList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, element);
      }
      if (hasStr()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getStr());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.zaluum.runtime.serial.ModelProtos.Line parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Line parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Line parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Line parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Line parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Line parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Line parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.zaluum.runtime.serial.ModelProtos.Line parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.zaluum.runtime.serial.ModelProtos.Line parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Line parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.zaluum.runtime.serial.ModelProtos.Line prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.zaluum.runtime.serial.ModelProtos.Line result;
      
      // Construct using org.zaluum.runtime.serial.ModelProtos.Line.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.zaluum.runtime.serial.ModelProtos.Line();
        return builder;
      }
      
      protected org.zaluum.runtime.serial.ModelProtos.Line internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.zaluum.runtime.serial.ModelProtos.Line();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.zaluum.runtime.serial.ModelProtos.Line.getDescriptor();
      }
      
      public org.zaluum.runtime.serial.ModelProtos.Line getDefaultInstanceForType() {
        return org.zaluum.runtime.serial.ModelProtos.Line.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.zaluum.runtime.serial.ModelProtos.Line build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.zaluum.runtime.serial.ModelProtos.Line buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.zaluum.runtime.serial.ModelProtos.Line buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.bendpoint_ != java.util.Collections.EMPTY_LIST) {
          result.bendpoint_ =
            java.util.Collections.unmodifiableList(result.bendpoint_);
        }
        org.zaluum.runtime.serial.ModelProtos.Line returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.zaluum.runtime.serial.ModelProtos.Line) {
          return mergeFrom((org.zaluum.runtime.serial.ModelProtos.Line)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.zaluum.runtime.serial.ModelProtos.Line other) {
        if (other == org.zaluum.runtime.serial.ModelProtos.Line.getDefaultInstance()) return this;
        if (other.hasFrom()) {
          setFrom(other.getFrom());
        }
        if (other.hasTo()) {
          setTo(other.getTo());
        }
        if (!other.bendpoint_.isEmpty()) {
          if (result.bendpoint_.isEmpty()) {
            result.bendpoint_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Bendpoint>();
          }
          result.bendpoint_.addAll(other.bendpoint_);
        }
        if (other.hasStr()) {
          setStr(other.getStr());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setFrom(input.readString());
              break;
            }
            case 18: {
              setTo(input.readString());
              break;
            }
            case 26: {
              org.zaluum.runtime.serial.ModelProtos.Bendpoint.Builder subBuilder = org.zaluum.runtime.serial.ModelProtos.Bendpoint.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addBendpoint(subBuilder.buildPartial());
              break;
            }
            case 34: {
              setStr(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string from = 1;
      public boolean hasFrom() {
        return result.hasFrom();
      }
      public java.lang.String getFrom() {
        return result.getFrom();
      }
      public Builder setFrom(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasFrom = true;
        result.from_ = value;
        return this;
      }
      public Builder clearFrom() {
        result.hasFrom = false;
        result.from_ = getDefaultInstance().getFrom();
        return this;
      }
      
      // required string to = 2;
      public boolean hasTo() {
        return result.hasTo();
      }
      public java.lang.String getTo() {
        return result.getTo();
      }
      public Builder setTo(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasTo = true;
        result.to_ = value;
        return this;
      }
      public Builder clearTo() {
        result.hasTo = false;
        result.to_ = getDefaultInstance().getTo();
        return this;
      }
      
      // repeated .Bendpoint bendpoint = 3;
      public java.util.List<org.zaluum.runtime.serial.ModelProtos.Bendpoint> getBendpointList() {
        return java.util.Collections.unmodifiableList(result.bendpoint_);
      }
      public int getBendpointCount() {
        return result.getBendpointCount();
      }
      public org.zaluum.runtime.serial.ModelProtos.Bendpoint getBendpoint(int index) {
        return result.getBendpoint(index);
      }
      public Builder setBendpoint(int index, org.zaluum.runtime.serial.ModelProtos.Bendpoint value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.bendpoint_.set(index, value);
        return this;
      }
      public Builder setBendpoint(int index, org.zaluum.runtime.serial.ModelProtos.Bendpoint.Builder builderForValue) {
        result.bendpoint_.set(index, builderForValue.build());
        return this;
      }
      public Builder addBendpoint(org.zaluum.runtime.serial.ModelProtos.Bendpoint value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.bendpoint_.isEmpty()) {
          result.bendpoint_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Bendpoint>();
        }
        result.bendpoint_.add(value);
        return this;
      }
      public Builder addBendpoint(org.zaluum.runtime.serial.ModelProtos.Bendpoint.Builder builderForValue) {
        if (result.bendpoint_.isEmpty()) {
          result.bendpoint_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Bendpoint>();
        }
        result.bendpoint_.add(builderForValue.build());
        return this;
      }
      public Builder addAllBendpoint(
          java.lang.Iterable<? extends org.zaluum.runtime.serial.ModelProtos.Bendpoint> values) {
        if (result.bendpoint_.isEmpty()) {
          result.bendpoint_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Bendpoint>();
        }
        super.addAll(values, result.bendpoint_);
        return this;
      }
      public Builder clearBendpoint() {
        result.bendpoint_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional string str = 4;
      public boolean hasStr() {
        return result.hasStr();
      }
      public java.lang.String getStr() {
        return result.getStr();
      }
      public Builder setStr(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasStr = true;
        result.str_ = value;
        return this;
      }
      public Builder clearStr() {
        result.hasStr = false;
        result.str_ = getDefaultInstance().getStr();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:Line)
    }
    
    static {
      defaultInstance = new Line(true);
      org.zaluum.runtime.serial.ModelProtos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Line)
  }
  
  public static final class Box extends
      com.google.protobuf.GeneratedMessage {
    // Use Box.newBuilder() to construct.
    private Box() {
      initFields();
    }
    private Box(boolean noInit) {}
    
    private static final Box defaultInstance;
    public static Box getDefaultInstance() {
      return defaultInstance;
    }
    
    public Box getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.zaluum.runtime.serial.ModelProtos.internal_static_Box_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.zaluum.runtime.serial.ModelProtos.internal_static_Box_fieldAccessorTable;
    }
    
    // required string id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private boolean hasId;
    private java.lang.String id_ = "";
    public boolean hasId() { return hasId; }
    public java.lang.String getId() { return id_; }
    
    // required .BoxType type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private boolean hasType;
    private org.zaluum.runtime.serial.ModelProtos.BoxType type_;
    public boolean hasType() { return hasType; }
    public org.zaluum.runtime.serial.ModelProtos.BoxType getType() { return type_; }
    
    // required .Rectangle bounds = 3;
    public static final int BOUNDS_FIELD_NUMBER = 3;
    private boolean hasBounds;
    private org.zaluum.runtime.serial.ModelProtos.Rectangle bounds_;
    public boolean hasBounds() { return hasBounds; }
    public org.zaluum.runtime.serial.ModelProtos.Rectangle getBounds() { return bounds_; }
    
    // optional string str = 4;
    public static final int STR_FIELD_NUMBER = 4;
    private boolean hasStr;
    private java.lang.String str_ = "";
    public boolean hasStr() { return hasStr; }
    public java.lang.String getStr() { return str_; }
    
    // repeated .Port port = 5;
    public static final int PORT_FIELD_NUMBER = 5;
    private java.util.List<org.zaluum.runtime.serial.ModelProtos.Port> port_ =
      java.util.Collections.emptyList();
    public java.util.List<org.zaluum.runtime.serial.ModelProtos.Port> getPortList() {
      return port_;
    }
    public int getPortCount() { return port_.size(); }
    public org.zaluum.runtime.serial.ModelProtos.Port getPort(int index) {
      return port_.get(index);
    }
    
    // repeated .Line wire = 6;
    public static final int WIRE_FIELD_NUMBER = 6;
    private java.util.List<org.zaluum.runtime.serial.ModelProtos.Line> wire_ =
      java.util.Collections.emptyList();
    public java.util.List<org.zaluum.runtime.serial.ModelProtos.Line> getWireList() {
      return wire_;
    }
    public int getWireCount() { return wire_.size(); }
    public org.zaluum.runtime.serial.ModelProtos.Line getWire(int index) {
      return wire_.get(index);
    }
    
    // repeated .Box child = 7;
    public static final int CHILD_FIELD_NUMBER = 7;
    private java.util.List<org.zaluum.runtime.serial.ModelProtos.Box> child_ =
      java.util.Collections.emptyList();
    public java.util.List<org.zaluum.runtime.serial.ModelProtos.Box> getChildList() {
      return child_;
    }
    public int getChildCount() { return child_.size(); }
    public org.zaluum.runtime.serial.ModelProtos.Box getChild(int index) {
      return child_.get(index);
    }
    
    // repeated .State state = 8;
    public static final int STATE_FIELD_NUMBER = 8;
    private java.util.List<org.zaluum.runtime.serial.ModelProtos.State> state_ =
      java.util.Collections.emptyList();
    public java.util.List<org.zaluum.runtime.serial.ModelProtos.State> getStateList() {
      return state_;
    }
    public int getStateCount() { return state_.size(); }
    public org.zaluum.runtime.serial.ModelProtos.State getState(int index) {
      return state_.get(index);
    }
    
    // repeated .Line transition = 9;
    public static final int TRANSITION_FIELD_NUMBER = 9;
    private java.util.List<org.zaluum.runtime.serial.ModelProtos.Line> transition_ =
      java.util.Collections.emptyList();
    public java.util.List<org.zaluum.runtime.serial.ModelProtos.Line> getTransitionList() {
      return transition_;
    }
    public int getTransitionCount() { return transition_.size(); }
    public org.zaluum.runtime.serial.ModelProtos.Line getTransition(int index) {
      return transition_.get(index);
    }
    
    // repeated .Sticky note = 10;
    public static final int NOTE_FIELD_NUMBER = 10;
    private java.util.List<org.zaluum.runtime.serial.ModelProtos.Sticky> note_ =
      java.util.Collections.emptyList();
    public java.util.List<org.zaluum.runtime.serial.ModelProtos.Sticky> getNoteList() {
      return note_;
    }
    public int getNoteCount() { return note_.size(); }
    public org.zaluum.runtime.serial.ModelProtos.Sticky getNote(int index) {
      return note_.get(index);
    }
    
    private void initFields() {
      type_ = org.zaluum.runtime.serial.ModelProtos.BoxType.COMPOSED;
      bounds_ = org.zaluum.runtime.serial.ModelProtos.Rectangle.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasId) return false;
      if (!hasType) return false;
      if (!hasBounds) return false;
      if (!getBounds().isInitialized()) return false;
      for (org.zaluum.runtime.serial.ModelProtos.Port element : getPortList()) {
        if (!element.isInitialized()) return false;
      }
      for (org.zaluum.runtime.serial.ModelProtos.Line element : getWireList()) {
        if (!element.isInitialized()) return false;
      }
      for (org.zaluum.runtime.serial.ModelProtos.Box element : getChildList()) {
        if (!element.isInitialized()) return false;
      }
      for (org.zaluum.runtime.serial.ModelProtos.State element : getStateList()) {
        if (!element.isInitialized()) return false;
      }
      for (org.zaluum.runtime.serial.ModelProtos.Line element : getTransitionList()) {
        if (!element.isInitialized()) return false;
      }
      for (org.zaluum.runtime.serial.ModelProtos.Sticky element : getNoteList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasId()) {
        output.writeString(1, getId());
      }
      if (hasType()) {
        output.writeEnum(2, getType().getNumber());
      }
      if (hasBounds()) {
        output.writeMessage(3, getBounds());
      }
      if (hasStr()) {
        output.writeString(4, getStr());
      }
      for (org.zaluum.runtime.serial.ModelProtos.Port element : getPortList()) {
        output.writeMessage(5, element);
      }
      for (org.zaluum.runtime.serial.ModelProtos.Line element : getWireList()) {
        output.writeMessage(6, element);
      }
      for (org.zaluum.runtime.serial.ModelProtos.Box element : getChildList()) {
        output.writeMessage(7, element);
      }
      for (org.zaluum.runtime.serial.ModelProtos.State element : getStateList()) {
        output.writeMessage(8, element);
      }
      for (org.zaluum.runtime.serial.ModelProtos.Line element : getTransitionList()) {
        output.writeMessage(9, element);
      }
      for (org.zaluum.runtime.serial.ModelProtos.Sticky element : getNoteList()) {
        output.writeMessage(10, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getId());
      }
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, getType().getNumber());
      }
      if (hasBounds()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getBounds());
      }
      if (hasStr()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getStr());
      }
      for (org.zaluum.runtime.serial.ModelProtos.Port element : getPortList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, element);
      }
      for (org.zaluum.runtime.serial.ModelProtos.Line element : getWireList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, element);
      }
      for (org.zaluum.runtime.serial.ModelProtos.Box element : getChildList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, element);
      }
      for (org.zaluum.runtime.serial.ModelProtos.State element : getStateList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, element);
      }
      for (org.zaluum.runtime.serial.ModelProtos.Line element : getTransitionList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, element);
      }
      for (org.zaluum.runtime.serial.ModelProtos.Sticky element : getNoteList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.zaluum.runtime.serial.ModelProtos.Box parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Box parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Box parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Box parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Box parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Box parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Box parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.zaluum.runtime.serial.ModelProtos.Box parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.zaluum.runtime.serial.ModelProtos.Box parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Box parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.zaluum.runtime.serial.ModelProtos.Box prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.zaluum.runtime.serial.ModelProtos.Box result;
      
      // Construct using org.zaluum.runtime.serial.ModelProtos.Box.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.zaluum.runtime.serial.ModelProtos.Box();
        return builder;
      }
      
      protected org.zaluum.runtime.serial.ModelProtos.Box internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.zaluum.runtime.serial.ModelProtos.Box();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.zaluum.runtime.serial.ModelProtos.Box.getDescriptor();
      }
      
      public org.zaluum.runtime.serial.ModelProtos.Box getDefaultInstanceForType() {
        return org.zaluum.runtime.serial.ModelProtos.Box.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.zaluum.runtime.serial.ModelProtos.Box build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.zaluum.runtime.serial.ModelProtos.Box buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.zaluum.runtime.serial.ModelProtos.Box buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.port_ != java.util.Collections.EMPTY_LIST) {
          result.port_ =
            java.util.Collections.unmodifiableList(result.port_);
        }
        if (result.wire_ != java.util.Collections.EMPTY_LIST) {
          result.wire_ =
            java.util.Collections.unmodifiableList(result.wire_);
        }
        if (result.child_ != java.util.Collections.EMPTY_LIST) {
          result.child_ =
            java.util.Collections.unmodifiableList(result.child_);
        }
        if (result.state_ != java.util.Collections.EMPTY_LIST) {
          result.state_ =
            java.util.Collections.unmodifiableList(result.state_);
        }
        if (result.transition_ != java.util.Collections.EMPTY_LIST) {
          result.transition_ =
            java.util.Collections.unmodifiableList(result.transition_);
        }
        if (result.note_ != java.util.Collections.EMPTY_LIST) {
          result.note_ =
            java.util.Collections.unmodifiableList(result.note_);
        }
        org.zaluum.runtime.serial.ModelProtos.Box returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.zaluum.runtime.serial.ModelProtos.Box) {
          return mergeFrom((org.zaluum.runtime.serial.ModelProtos.Box)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.zaluum.runtime.serial.ModelProtos.Box other) {
        if (other == org.zaluum.runtime.serial.ModelProtos.Box.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasBounds()) {
          mergeBounds(other.getBounds());
        }
        if (other.hasStr()) {
          setStr(other.getStr());
        }
        if (!other.port_.isEmpty()) {
          if (result.port_.isEmpty()) {
            result.port_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Port>();
          }
          result.port_.addAll(other.port_);
        }
        if (!other.wire_.isEmpty()) {
          if (result.wire_.isEmpty()) {
            result.wire_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Line>();
          }
          result.wire_.addAll(other.wire_);
        }
        if (!other.child_.isEmpty()) {
          if (result.child_.isEmpty()) {
            result.child_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Box>();
          }
          result.child_.addAll(other.child_);
        }
        if (!other.state_.isEmpty()) {
          if (result.state_.isEmpty()) {
            result.state_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.State>();
          }
          result.state_.addAll(other.state_);
        }
        if (!other.transition_.isEmpty()) {
          if (result.transition_.isEmpty()) {
            result.transition_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Line>();
          }
          result.transition_.addAll(other.transition_);
        }
        if (!other.note_.isEmpty()) {
          if (result.note_.isEmpty()) {
            result.note_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Sticky>();
          }
          result.note_.addAll(other.note_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setId(input.readString());
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              org.zaluum.runtime.serial.ModelProtos.BoxType value = org.zaluum.runtime.serial.ModelProtos.BoxType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                setType(value);
              }
              break;
            }
            case 26: {
              org.zaluum.runtime.serial.ModelProtos.Rectangle.Builder subBuilder = org.zaluum.runtime.serial.ModelProtos.Rectangle.newBuilder();
              if (hasBounds()) {
                subBuilder.mergeFrom(getBounds());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setBounds(subBuilder.buildPartial());
              break;
            }
            case 34: {
              setStr(input.readString());
              break;
            }
            case 42: {
              org.zaluum.runtime.serial.ModelProtos.Port.Builder subBuilder = org.zaluum.runtime.serial.ModelProtos.Port.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addPort(subBuilder.buildPartial());
              break;
            }
            case 50: {
              org.zaluum.runtime.serial.ModelProtos.Line.Builder subBuilder = org.zaluum.runtime.serial.ModelProtos.Line.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addWire(subBuilder.buildPartial());
              break;
            }
            case 58: {
              org.zaluum.runtime.serial.ModelProtos.Box.Builder subBuilder = org.zaluum.runtime.serial.ModelProtos.Box.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addChild(subBuilder.buildPartial());
              break;
            }
            case 66: {
              org.zaluum.runtime.serial.ModelProtos.State.Builder subBuilder = org.zaluum.runtime.serial.ModelProtos.State.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addState(subBuilder.buildPartial());
              break;
            }
            case 74: {
              org.zaluum.runtime.serial.ModelProtos.Line.Builder subBuilder = org.zaluum.runtime.serial.ModelProtos.Line.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addTransition(subBuilder.buildPartial());
              break;
            }
            case 82: {
              org.zaluum.runtime.serial.ModelProtos.Sticky.Builder subBuilder = org.zaluum.runtime.serial.ModelProtos.Sticky.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addNote(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string id = 1;
      public boolean hasId() {
        return result.hasId();
      }
      public java.lang.String getId() {
        return result.getId();
      }
      public Builder setId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = getDefaultInstance().getId();
        return this;
      }
      
      // required .BoxType type = 2;
      public boolean hasType() {
        return result.hasType();
      }
      public org.zaluum.runtime.serial.ModelProtos.BoxType getType() {
        return result.getType();
      }
      public Builder setType(org.zaluum.runtime.serial.ModelProtos.BoxType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = org.zaluum.runtime.serial.ModelProtos.BoxType.COMPOSED;
        return this;
      }
      
      // required .Rectangle bounds = 3;
      public boolean hasBounds() {
        return result.hasBounds();
      }
      public org.zaluum.runtime.serial.ModelProtos.Rectangle getBounds() {
        return result.getBounds();
      }
      public Builder setBounds(org.zaluum.runtime.serial.ModelProtos.Rectangle value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasBounds = true;
        result.bounds_ = value;
        return this;
      }
      public Builder setBounds(org.zaluum.runtime.serial.ModelProtos.Rectangle.Builder builderForValue) {
        result.hasBounds = true;
        result.bounds_ = builderForValue.build();
        return this;
      }
      public Builder mergeBounds(org.zaluum.runtime.serial.ModelProtos.Rectangle value) {
        if (result.hasBounds() &&
            result.bounds_ != org.zaluum.runtime.serial.ModelProtos.Rectangle.getDefaultInstance()) {
          result.bounds_ =
            org.zaluum.runtime.serial.ModelProtos.Rectangle.newBuilder(result.bounds_).mergeFrom(value).buildPartial();
        } else {
          result.bounds_ = value;
        }
        result.hasBounds = true;
        return this;
      }
      public Builder clearBounds() {
        result.hasBounds = false;
        result.bounds_ = org.zaluum.runtime.serial.ModelProtos.Rectangle.getDefaultInstance();
        return this;
      }
      
      // optional string str = 4;
      public boolean hasStr() {
        return result.hasStr();
      }
      public java.lang.String getStr() {
        return result.getStr();
      }
      public Builder setStr(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasStr = true;
        result.str_ = value;
        return this;
      }
      public Builder clearStr() {
        result.hasStr = false;
        result.str_ = getDefaultInstance().getStr();
        return this;
      }
      
      // repeated .Port port = 5;
      public java.util.List<org.zaluum.runtime.serial.ModelProtos.Port> getPortList() {
        return java.util.Collections.unmodifiableList(result.port_);
      }
      public int getPortCount() {
        return result.getPortCount();
      }
      public org.zaluum.runtime.serial.ModelProtos.Port getPort(int index) {
        return result.getPort(index);
      }
      public Builder setPort(int index, org.zaluum.runtime.serial.ModelProtos.Port value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.port_.set(index, value);
        return this;
      }
      public Builder setPort(int index, org.zaluum.runtime.serial.ModelProtos.Port.Builder builderForValue) {
        result.port_.set(index, builderForValue.build());
        return this;
      }
      public Builder addPort(org.zaluum.runtime.serial.ModelProtos.Port value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.port_.isEmpty()) {
          result.port_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Port>();
        }
        result.port_.add(value);
        return this;
      }
      public Builder addPort(org.zaluum.runtime.serial.ModelProtos.Port.Builder builderForValue) {
        if (result.port_.isEmpty()) {
          result.port_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Port>();
        }
        result.port_.add(builderForValue.build());
        return this;
      }
      public Builder addAllPort(
          java.lang.Iterable<? extends org.zaluum.runtime.serial.ModelProtos.Port> values) {
        if (result.port_.isEmpty()) {
          result.port_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Port>();
        }
        super.addAll(values, result.port_);
        return this;
      }
      public Builder clearPort() {
        result.port_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .Line wire = 6;
      public java.util.List<org.zaluum.runtime.serial.ModelProtos.Line> getWireList() {
        return java.util.Collections.unmodifiableList(result.wire_);
      }
      public int getWireCount() {
        return result.getWireCount();
      }
      public org.zaluum.runtime.serial.ModelProtos.Line getWire(int index) {
        return result.getWire(index);
      }
      public Builder setWire(int index, org.zaluum.runtime.serial.ModelProtos.Line value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.wire_.set(index, value);
        return this;
      }
      public Builder setWire(int index, org.zaluum.runtime.serial.ModelProtos.Line.Builder builderForValue) {
        result.wire_.set(index, builderForValue.build());
        return this;
      }
      public Builder addWire(org.zaluum.runtime.serial.ModelProtos.Line value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.wire_.isEmpty()) {
          result.wire_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Line>();
        }
        result.wire_.add(value);
        return this;
      }
      public Builder addWire(org.zaluum.runtime.serial.ModelProtos.Line.Builder builderForValue) {
        if (result.wire_.isEmpty()) {
          result.wire_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Line>();
        }
        result.wire_.add(builderForValue.build());
        return this;
      }
      public Builder addAllWire(
          java.lang.Iterable<? extends org.zaluum.runtime.serial.ModelProtos.Line> values) {
        if (result.wire_.isEmpty()) {
          result.wire_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Line>();
        }
        super.addAll(values, result.wire_);
        return this;
      }
      public Builder clearWire() {
        result.wire_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .Box child = 7;
      public java.util.List<org.zaluum.runtime.serial.ModelProtos.Box> getChildList() {
        return java.util.Collections.unmodifiableList(result.child_);
      }
      public int getChildCount() {
        return result.getChildCount();
      }
      public org.zaluum.runtime.serial.ModelProtos.Box getChild(int index) {
        return result.getChild(index);
      }
      public Builder setChild(int index, org.zaluum.runtime.serial.ModelProtos.Box value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.child_.set(index, value);
        return this;
      }
      public Builder setChild(int index, org.zaluum.runtime.serial.ModelProtos.Box.Builder builderForValue) {
        result.child_.set(index, builderForValue.build());
        return this;
      }
      public Builder addChild(org.zaluum.runtime.serial.ModelProtos.Box value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.child_.isEmpty()) {
          result.child_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Box>();
        }
        result.child_.add(value);
        return this;
      }
      public Builder addChild(org.zaluum.runtime.serial.ModelProtos.Box.Builder builderForValue) {
        if (result.child_.isEmpty()) {
          result.child_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Box>();
        }
        result.child_.add(builderForValue.build());
        return this;
      }
      public Builder addAllChild(
          java.lang.Iterable<? extends org.zaluum.runtime.serial.ModelProtos.Box> values) {
        if (result.child_.isEmpty()) {
          result.child_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Box>();
        }
        super.addAll(values, result.child_);
        return this;
      }
      public Builder clearChild() {
        result.child_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .State state = 8;
      public java.util.List<org.zaluum.runtime.serial.ModelProtos.State> getStateList() {
        return java.util.Collections.unmodifiableList(result.state_);
      }
      public int getStateCount() {
        return result.getStateCount();
      }
      public org.zaluum.runtime.serial.ModelProtos.State getState(int index) {
        return result.getState(index);
      }
      public Builder setState(int index, org.zaluum.runtime.serial.ModelProtos.State value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.state_.set(index, value);
        return this;
      }
      public Builder setState(int index, org.zaluum.runtime.serial.ModelProtos.State.Builder builderForValue) {
        result.state_.set(index, builderForValue.build());
        return this;
      }
      public Builder addState(org.zaluum.runtime.serial.ModelProtos.State value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.state_.isEmpty()) {
          result.state_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.State>();
        }
        result.state_.add(value);
        return this;
      }
      public Builder addState(org.zaluum.runtime.serial.ModelProtos.State.Builder builderForValue) {
        if (result.state_.isEmpty()) {
          result.state_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.State>();
        }
        result.state_.add(builderForValue.build());
        return this;
      }
      public Builder addAllState(
          java.lang.Iterable<? extends org.zaluum.runtime.serial.ModelProtos.State> values) {
        if (result.state_.isEmpty()) {
          result.state_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.State>();
        }
        super.addAll(values, result.state_);
        return this;
      }
      public Builder clearState() {
        result.state_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .Line transition = 9;
      public java.util.List<org.zaluum.runtime.serial.ModelProtos.Line> getTransitionList() {
        return java.util.Collections.unmodifiableList(result.transition_);
      }
      public int getTransitionCount() {
        return result.getTransitionCount();
      }
      public org.zaluum.runtime.serial.ModelProtos.Line getTransition(int index) {
        return result.getTransition(index);
      }
      public Builder setTransition(int index, org.zaluum.runtime.serial.ModelProtos.Line value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.transition_.set(index, value);
        return this;
      }
      public Builder setTransition(int index, org.zaluum.runtime.serial.ModelProtos.Line.Builder builderForValue) {
        result.transition_.set(index, builderForValue.build());
        return this;
      }
      public Builder addTransition(org.zaluum.runtime.serial.ModelProtos.Line value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.transition_.isEmpty()) {
          result.transition_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Line>();
        }
        result.transition_.add(value);
        return this;
      }
      public Builder addTransition(org.zaluum.runtime.serial.ModelProtos.Line.Builder builderForValue) {
        if (result.transition_.isEmpty()) {
          result.transition_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Line>();
        }
        result.transition_.add(builderForValue.build());
        return this;
      }
      public Builder addAllTransition(
          java.lang.Iterable<? extends org.zaluum.runtime.serial.ModelProtos.Line> values) {
        if (result.transition_.isEmpty()) {
          result.transition_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Line>();
        }
        super.addAll(values, result.transition_);
        return this;
      }
      public Builder clearTransition() {
        result.transition_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .Sticky note = 10;
      public java.util.List<org.zaluum.runtime.serial.ModelProtos.Sticky> getNoteList() {
        return java.util.Collections.unmodifiableList(result.note_);
      }
      public int getNoteCount() {
        return result.getNoteCount();
      }
      public org.zaluum.runtime.serial.ModelProtos.Sticky getNote(int index) {
        return result.getNote(index);
      }
      public Builder setNote(int index, org.zaluum.runtime.serial.ModelProtos.Sticky value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.note_.set(index, value);
        return this;
      }
      public Builder setNote(int index, org.zaluum.runtime.serial.ModelProtos.Sticky.Builder builderForValue) {
        result.note_.set(index, builderForValue.build());
        return this;
      }
      public Builder addNote(org.zaluum.runtime.serial.ModelProtos.Sticky value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.note_.isEmpty()) {
          result.note_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Sticky>();
        }
        result.note_.add(value);
        return this;
      }
      public Builder addNote(org.zaluum.runtime.serial.ModelProtos.Sticky.Builder builderForValue) {
        if (result.note_.isEmpty()) {
          result.note_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Sticky>();
        }
        result.note_.add(builderForValue.build());
        return this;
      }
      public Builder addAllNote(
          java.lang.Iterable<? extends org.zaluum.runtime.serial.ModelProtos.Sticky> values) {
        if (result.note_.isEmpty()) {
          result.note_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Sticky>();
        }
        super.addAll(values, result.note_);
        return this;
      }
      public Builder clearNote() {
        result.note_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:Box)
    }
    
    static {
      defaultInstance = new Box(true);
      org.zaluum.runtime.serial.ModelProtos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Box)
  }
  
  public static final class State extends
      com.google.protobuf.GeneratedMessage {
    // Use State.newBuilder() to construct.
    private State() {
      initFields();
    }
    private State(boolean noInit) {}
    
    private static final State defaultInstance;
    public static State getDefaultInstance() {
      return defaultInstance;
    }
    
    public State getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.zaluum.runtime.serial.ModelProtos.internal_static_State_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.zaluum.runtime.serial.ModelProtos.internal_static_State_fieldAccessorTable;
    }
    
    // required string id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private boolean hasId;
    private java.lang.String id_ = "";
    public boolean hasId() { return hasId; }
    public java.lang.String getId() { return id_; }
    
    // required .Point position = 2;
    public static final int POSITION_FIELD_NUMBER = 2;
    private boolean hasPosition;
    private org.zaluum.runtime.serial.ModelProtos.Point position_;
    public boolean hasPosition() { return hasPosition; }
    public org.zaluum.runtime.serial.ModelProtos.Point getPosition() { return position_; }
    
    // required bool initial = 3;
    public static final int INITIAL_FIELD_NUMBER = 3;
    private boolean hasInitial;
    private boolean initial_ = false;
    public boolean hasInitial() { return hasInitial; }
    public boolean getInitial() { return initial_; }
    
    // optional string entry_action = 4;
    public static final int ENTRY_ACTION_FIELD_NUMBER = 4;
    private boolean hasEntryAction;
    private java.lang.String entryAction_ = "";
    public boolean hasEntryAction() { return hasEntryAction; }
    public java.lang.String getEntryAction() { return entryAction_; }
    
    // optional string exit_action = 5;
    public static final int EXIT_ACTION_FIELD_NUMBER = 5;
    private boolean hasExitAction;
    private java.lang.String exitAction_ = "";
    public boolean hasExitAction() { return hasExitAction; }
    public java.lang.String getExitAction() { return exitAction_; }
    
    // optional string input_action = 6;
    public static final int INPUT_ACTION_FIELD_NUMBER = 6;
    private boolean hasInputAction;
    private java.lang.String inputAction_ = "";
    public boolean hasInputAction() { return hasInputAction; }
    public java.lang.String getInputAction() { return inputAction_; }
    
    private void initFields() {
      position_ = org.zaluum.runtime.serial.ModelProtos.Point.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasId) return false;
      if (!hasPosition) return false;
      if (!hasInitial) return false;
      if (!getPosition().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasId()) {
        output.writeString(1, getId());
      }
      if (hasPosition()) {
        output.writeMessage(2, getPosition());
      }
      if (hasInitial()) {
        output.writeBool(3, getInitial());
      }
      if (hasEntryAction()) {
        output.writeString(4, getEntryAction());
      }
      if (hasExitAction()) {
        output.writeString(5, getExitAction());
      }
      if (hasInputAction()) {
        output.writeString(6, getInputAction());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getId());
      }
      if (hasPosition()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPosition());
      }
      if (hasInitial()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, getInitial());
      }
      if (hasEntryAction()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getEntryAction());
      }
      if (hasExitAction()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getExitAction());
      }
      if (hasInputAction()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(6, getInputAction());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.zaluum.runtime.serial.ModelProtos.State parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.State parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.State parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.State parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.State parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.State parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.State parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.zaluum.runtime.serial.ModelProtos.State parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.zaluum.runtime.serial.ModelProtos.State parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.State parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.zaluum.runtime.serial.ModelProtos.State prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.zaluum.runtime.serial.ModelProtos.State result;
      
      // Construct using org.zaluum.runtime.serial.ModelProtos.State.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.zaluum.runtime.serial.ModelProtos.State();
        return builder;
      }
      
      protected org.zaluum.runtime.serial.ModelProtos.State internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.zaluum.runtime.serial.ModelProtos.State();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.zaluum.runtime.serial.ModelProtos.State.getDescriptor();
      }
      
      public org.zaluum.runtime.serial.ModelProtos.State getDefaultInstanceForType() {
        return org.zaluum.runtime.serial.ModelProtos.State.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.zaluum.runtime.serial.ModelProtos.State build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.zaluum.runtime.serial.ModelProtos.State buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.zaluum.runtime.serial.ModelProtos.State buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.zaluum.runtime.serial.ModelProtos.State returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.zaluum.runtime.serial.ModelProtos.State) {
          return mergeFrom((org.zaluum.runtime.serial.ModelProtos.State)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.zaluum.runtime.serial.ModelProtos.State other) {
        if (other == org.zaluum.runtime.serial.ModelProtos.State.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasPosition()) {
          mergePosition(other.getPosition());
        }
        if (other.hasInitial()) {
          setInitial(other.getInitial());
        }
        if (other.hasEntryAction()) {
          setEntryAction(other.getEntryAction());
        }
        if (other.hasExitAction()) {
          setExitAction(other.getExitAction());
        }
        if (other.hasInputAction()) {
          setInputAction(other.getInputAction());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setId(input.readString());
              break;
            }
            case 18: {
              org.zaluum.runtime.serial.ModelProtos.Point.Builder subBuilder = org.zaluum.runtime.serial.ModelProtos.Point.newBuilder();
              if (hasPosition()) {
                subBuilder.mergeFrom(getPosition());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setPosition(subBuilder.buildPartial());
              break;
            }
            case 24: {
              setInitial(input.readBool());
              break;
            }
            case 34: {
              setEntryAction(input.readString());
              break;
            }
            case 42: {
              setExitAction(input.readString());
              break;
            }
            case 50: {
              setInputAction(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string id = 1;
      public boolean hasId() {
        return result.hasId();
      }
      public java.lang.String getId() {
        return result.getId();
      }
      public Builder setId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = getDefaultInstance().getId();
        return this;
      }
      
      // required .Point position = 2;
      public boolean hasPosition() {
        return result.hasPosition();
      }
      public org.zaluum.runtime.serial.ModelProtos.Point getPosition() {
        return result.getPosition();
      }
      public Builder setPosition(org.zaluum.runtime.serial.ModelProtos.Point value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasPosition = true;
        result.position_ = value;
        return this;
      }
      public Builder setPosition(org.zaluum.runtime.serial.ModelProtos.Point.Builder builderForValue) {
        result.hasPosition = true;
        result.position_ = builderForValue.build();
        return this;
      }
      public Builder mergePosition(org.zaluum.runtime.serial.ModelProtos.Point value) {
        if (result.hasPosition() &&
            result.position_ != org.zaluum.runtime.serial.ModelProtos.Point.getDefaultInstance()) {
          result.position_ =
            org.zaluum.runtime.serial.ModelProtos.Point.newBuilder(result.position_).mergeFrom(value).buildPartial();
        } else {
          result.position_ = value;
        }
        result.hasPosition = true;
        return this;
      }
      public Builder clearPosition() {
        result.hasPosition = false;
        result.position_ = org.zaluum.runtime.serial.ModelProtos.Point.getDefaultInstance();
        return this;
      }
      
      // required bool initial = 3;
      public boolean hasInitial() {
        return result.hasInitial();
      }
      public boolean getInitial() {
        return result.getInitial();
      }
      public Builder setInitial(boolean value) {
        result.hasInitial = true;
        result.initial_ = value;
        return this;
      }
      public Builder clearInitial() {
        result.hasInitial = false;
        result.initial_ = false;
        return this;
      }
      
      // optional string entry_action = 4;
      public boolean hasEntryAction() {
        return result.hasEntryAction();
      }
      public java.lang.String getEntryAction() {
        return result.getEntryAction();
      }
      public Builder setEntryAction(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasEntryAction = true;
        result.entryAction_ = value;
        return this;
      }
      public Builder clearEntryAction() {
        result.hasEntryAction = false;
        result.entryAction_ = getDefaultInstance().getEntryAction();
        return this;
      }
      
      // optional string exit_action = 5;
      public boolean hasExitAction() {
        return result.hasExitAction();
      }
      public java.lang.String getExitAction() {
        return result.getExitAction();
      }
      public Builder setExitAction(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasExitAction = true;
        result.exitAction_ = value;
        return this;
      }
      public Builder clearExitAction() {
        result.hasExitAction = false;
        result.exitAction_ = getDefaultInstance().getExitAction();
        return this;
      }
      
      // optional string input_action = 6;
      public boolean hasInputAction() {
        return result.hasInputAction();
      }
      public java.lang.String getInputAction() {
        return result.getInputAction();
      }
      public Builder setInputAction(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasInputAction = true;
        result.inputAction_ = value;
        return this;
      }
      public Builder clearInputAction() {
        result.hasInputAction = false;
        result.inputAction_ = getDefaultInstance().getInputAction();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:State)
    }
    
    static {
      defaultInstance = new State(true);
      org.zaluum.runtime.serial.ModelProtos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:State)
  }
  
  public static final class Clipboard extends
      com.google.protobuf.GeneratedMessage {
    // Use Clipboard.newBuilder() to construct.
    private Clipboard() {
      initFields();
    }
    private Clipboard(boolean noInit) {}
    
    private static final Clipboard defaultInstance;
    public static Clipboard getDefaultInstance() {
      return defaultInstance;
    }
    
    public Clipboard getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.zaluum.runtime.serial.ModelProtos.internal_static_Clipboard_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.zaluum.runtime.serial.ModelProtos.internal_static_Clipboard_fieldAccessorTable;
    }
    
    // repeated .Box box = 1;
    public static final int BOX_FIELD_NUMBER = 1;
    private java.util.List<org.zaluum.runtime.serial.ModelProtos.Box> box_ =
      java.util.Collections.emptyList();
    public java.util.List<org.zaluum.runtime.serial.ModelProtos.Box> getBoxList() {
      return box_;
    }
    public int getBoxCount() { return box_.size(); }
    public org.zaluum.runtime.serial.ModelProtos.Box getBox(int index) {
      return box_.get(index);
    }
    
    // repeated .Port port = 2;
    public static final int PORT_FIELD_NUMBER = 2;
    private java.util.List<org.zaluum.runtime.serial.ModelProtos.Port> port_ =
      java.util.Collections.emptyList();
    public java.util.List<org.zaluum.runtime.serial.ModelProtos.Port> getPortList() {
      return port_;
    }
    public int getPortCount() { return port_.size(); }
    public org.zaluum.runtime.serial.ModelProtos.Port getPort(int index) {
      return port_.get(index);
    }
    
    // repeated .Sticky note = 3;
    public static final int NOTE_FIELD_NUMBER = 3;
    private java.util.List<org.zaluum.runtime.serial.ModelProtos.Sticky> note_ =
      java.util.Collections.emptyList();
    public java.util.List<org.zaluum.runtime.serial.ModelProtos.Sticky> getNoteList() {
      return note_;
    }
    public int getNoteCount() { return note_.size(); }
    public org.zaluum.runtime.serial.ModelProtos.Sticky getNote(int index) {
      return note_.get(index);
    }
    
    // repeated .State state = 4;
    public static final int STATE_FIELD_NUMBER = 4;
    private java.util.List<org.zaluum.runtime.serial.ModelProtos.State> state_ =
      java.util.Collections.emptyList();
    public java.util.List<org.zaluum.runtime.serial.ModelProtos.State> getStateList() {
      return state_;
    }
    public int getStateCount() { return state_.size(); }
    public org.zaluum.runtime.serial.ModelProtos.State getState(int index) {
      return state_.get(index);
    }
    
    // repeated .Line wire = 5;
    public static final int WIRE_FIELD_NUMBER = 5;
    private java.util.List<org.zaluum.runtime.serial.ModelProtos.Line> wire_ =
      java.util.Collections.emptyList();
    public java.util.List<org.zaluum.runtime.serial.ModelProtos.Line> getWireList() {
      return wire_;
    }
    public int getWireCount() { return wire_.size(); }
    public org.zaluum.runtime.serial.ModelProtos.Line getWire(int index) {
      return wire_.get(index);
    }
    
    // repeated .Line transition = 6;
    public static final int TRANSITION_FIELD_NUMBER = 6;
    private java.util.List<org.zaluum.runtime.serial.ModelProtos.Line> transition_ =
      java.util.Collections.emptyList();
    public java.util.List<org.zaluum.runtime.serial.ModelProtos.Line> getTransitionList() {
      return transition_;
    }
    public int getTransitionCount() { return transition_.size(); }
    public org.zaluum.runtime.serial.ModelProtos.Line getTransition(int index) {
      return transition_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (org.zaluum.runtime.serial.ModelProtos.Box element : getBoxList()) {
        if (!element.isInitialized()) return false;
      }
      for (org.zaluum.runtime.serial.ModelProtos.Port element : getPortList()) {
        if (!element.isInitialized()) return false;
      }
      for (org.zaluum.runtime.serial.ModelProtos.Sticky element : getNoteList()) {
        if (!element.isInitialized()) return false;
      }
      for (org.zaluum.runtime.serial.ModelProtos.State element : getStateList()) {
        if (!element.isInitialized()) return false;
      }
      for (org.zaluum.runtime.serial.ModelProtos.Line element : getWireList()) {
        if (!element.isInitialized()) return false;
      }
      for (org.zaluum.runtime.serial.ModelProtos.Line element : getTransitionList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (org.zaluum.runtime.serial.ModelProtos.Box element : getBoxList()) {
        output.writeMessage(1, element);
      }
      for (org.zaluum.runtime.serial.ModelProtos.Port element : getPortList()) {
        output.writeMessage(2, element);
      }
      for (org.zaluum.runtime.serial.ModelProtos.Sticky element : getNoteList()) {
        output.writeMessage(3, element);
      }
      for (org.zaluum.runtime.serial.ModelProtos.State element : getStateList()) {
        output.writeMessage(4, element);
      }
      for (org.zaluum.runtime.serial.ModelProtos.Line element : getWireList()) {
        output.writeMessage(5, element);
      }
      for (org.zaluum.runtime.serial.ModelProtos.Line element : getTransitionList()) {
        output.writeMessage(6, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (org.zaluum.runtime.serial.ModelProtos.Box element : getBoxList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      for (org.zaluum.runtime.serial.ModelProtos.Port element : getPortList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      for (org.zaluum.runtime.serial.ModelProtos.Sticky element : getNoteList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, element);
      }
      for (org.zaluum.runtime.serial.ModelProtos.State element : getStateList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, element);
      }
      for (org.zaluum.runtime.serial.ModelProtos.Line element : getWireList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, element);
      }
      for (org.zaluum.runtime.serial.ModelProtos.Line element : getTransitionList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.zaluum.runtime.serial.ModelProtos.Clipboard parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Clipboard parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Clipboard parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Clipboard parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Clipboard parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Clipboard parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Clipboard parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.zaluum.runtime.serial.ModelProtos.Clipboard parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.zaluum.runtime.serial.ModelProtos.Clipboard parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Clipboard parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.zaluum.runtime.serial.ModelProtos.Clipboard prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.zaluum.runtime.serial.ModelProtos.Clipboard result;
      
      // Construct using org.zaluum.runtime.serial.ModelProtos.Clipboard.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.zaluum.runtime.serial.ModelProtos.Clipboard();
        return builder;
      }
      
      protected org.zaluum.runtime.serial.ModelProtos.Clipboard internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.zaluum.runtime.serial.ModelProtos.Clipboard();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.zaluum.runtime.serial.ModelProtos.Clipboard.getDescriptor();
      }
      
      public org.zaluum.runtime.serial.ModelProtos.Clipboard getDefaultInstanceForType() {
        return org.zaluum.runtime.serial.ModelProtos.Clipboard.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.zaluum.runtime.serial.ModelProtos.Clipboard build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.zaluum.runtime.serial.ModelProtos.Clipboard buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.zaluum.runtime.serial.ModelProtos.Clipboard buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.box_ != java.util.Collections.EMPTY_LIST) {
          result.box_ =
            java.util.Collections.unmodifiableList(result.box_);
        }
        if (result.port_ != java.util.Collections.EMPTY_LIST) {
          result.port_ =
            java.util.Collections.unmodifiableList(result.port_);
        }
        if (result.note_ != java.util.Collections.EMPTY_LIST) {
          result.note_ =
            java.util.Collections.unmodifiableList(result.note_);
        }
        if (result.state_ != java.util.Collections.EMPTY_LIST) {
          result.state_ =
            java.util.Collections.unmodifiableList(result.state_);
        }
        if (result.wire_ != java.util.Collections.EMPTY_LIST) {
          result.wire_ =
            java.util.Collections.unmodifiableList(result.wire_);
        }
        if (result.transition_ != java.util.Collections.EMPTY_LIST) {
          result.transition_ =
            java.util.Collections.unmodifiableList(result.transition_);
        }
        org.zaluum.runtime.serial.ModelProtos.Clipboard returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.zaluum.runtime.serial.ModelProtos.Clipboard) {
          return mergeFrom((org.zaluum.runtime.serial.ModelProtos.Clipboard)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.zaluum.runtime.serial.ModelProtos.Clipboard other) {
        if (other == org.zaluum.runtime.serial.ModelProtos.Clipboard.getDefaultInstance()) return this;
        if (!other.box_.isEmpty()) {
          if (result.box_.isEmpty()) {
            result.box_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Box>();
          }
          result.box_.addAll(other.box_);
        }
        if (!other.port_.isEmpty()) {
          if (result.port_.isEmpty()) {
            result.port_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Port>();
          }
          result.port_.addAll(other.port_);
        }
        if (!other.note_.isEmpty()) {
          if (result.note_.isEmpty()) {
            result.note_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Sticky>();
          }
          result.note_.addAll(other.note_);
        }
        if (!other.state_.isEmpty()) {
          if (result.state_.isEmpty()) {
            result.state_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.State>();
          }
          result.state_.addAll(other.state_);
        }
        if (!other.wire_.isEmpty()) {
          if (result.wire_.isEmpty()) {
            result.wire_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Line>();
          }
          result.wire_.addAll(other.wire_);
        }
        if (!other.transition_.isEmpty()) {
          if (result.transition_.isEmpty()) {
            result.transition_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Line>();
          }
          result.transition_.addAll(other.transition_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              org.zaluum.runtime.serial.ModelProtos.Box.Builder subBuilder = org.zaluum.runtime.serial.ModelProtos.Box.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addBox(subBuilder.buildPartial());
              break;
            }
            case 18: {
              org.zaluum.runtime.serial.ModelProtos.Port.Builder subBuilder = org.zaluum.runtime.serial.ModelProtos.Port.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addPort(subBuilder.buildPartial());
              break;
            }
            case 26: {
              org.zaluum.runtime.serial.ModelProtos.Sticky.Builder subBuilder = org.zaluum.runtime.serial.ModelProtos.Sticky.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addNote(subBuilder.buildPartial());
              break;
            }
            case 34: {
              org.zaluum.runtime.serial.ModelProtos.State.Builder subBuilder = org.zaluum.runtime.serial.ModelProtos.State.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addState(subBuilder.buildPartial());
              break;
            }
            case 42: {
              org.zaluum.runtime.serial.ModelProtos.Line.Builder subBuilder = org.zaluum.runtime.serial.ModelProtos.Line.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addWire(subBuilder.buildPartial());
              break;
            }
            case 50: {
              org.zaluum.runtime.serial.ModelProtos.Line.Builder subBuilder = org.zaluum.runtime.serial.ModelProtos.Line.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addTransition(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .Box box = 1;
      public java.util.List<org.zaluum.runtime.serial.ModelProtos.Box> getBoxList() {
        return java.util.Collections.unmodifiableList(result.box_);
      }
      public int getBoxCount() {
        return result.getBoxCount();
      }
      public org.zaluum.runtime.serial.ModelProtos.Box getBox(int index) {
        return result.getBox(index);
      }
      public Builder setBox(int index, org.zaluum.runtime.serial.ModelProtos.Box value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.box_.set(index, value);
        return this;
      }
      public Builder setBox(int index, org.zaluum.runtime.serial.ModelProtos.Box.Builder builderForValue) {
        result.box_.set(index, builderForValue.build());
        return this;
      }
      public Builder addBox(org.zaluum.runtime.serial.ModelProtos.Box value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.box_.isEmpty()) {
          result.box_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Box>();
        }
        result.box_.add(value);
        return this;
      }
      public Builder addBox(org.zaluum.runtime.serial.ModelProtos.Box.Builder builderForValue) {
        if (result.box_.isEmpty()) {
          result.box_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Box>();
        }
        result.box_.add(builderForValue.build());
        return this;
      }
      public Builder addAllBox(
          java.lang.Iterable<? extends org.zaluum.runtime.serial.ModelProtos.Box> values) {
        if (result.box_.isEmpty()) {
          result.box_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Box>();
        }
        super.addAll(values, result.box_);
        return this;
      }
      public Builder clearBox() {
        result.box_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .Port port = 2;
      public java.util.List<org.zaluum.runtime.serial.ModelProtos.Port> getPortList() {
        return java.util.Collections.unmodifiableList(result.port_);
      }
      public int getPortCount() {
        return result.getPortCount();
      }
      public org.zaluum.runtime.serial.ModelProtos.Port getPort(int index) {
        return result.getPort(index);
      }
      public Builder setPort(int index, org.zaluum.runtime.serial.ModelProtos.Port value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.port_.set(index, value);
        return this;
      }
      public Builder setPort(int index, org.zaluum.runtime.serial.ModelProtos.Port.Builder builderForValue) {
        result.port_.set(index, builderForValue.build());
        return this;
      }
      public Builder addPort(org.zaluum.runtime.serial.ModelProtos.Port value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.port_.isEmpty()) {
          result.port_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Port>();
        }
        result.port_.add(value);
        return this;
      }
      public Builder addPort(org.zaluum.runtime.serial.ModelProtos.Port.Builder builderForValue) {
        if (result.port_.isEmpty()) {
          result.port_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Port>();
        }
        result.port_.add(builderForValue.build());
        return this;
      }
      public Builder addAllPort(
          java.lang.Iterable<? extends org.zaluum.runtime.serial.ModelProtos.Port> values) {
        if (result.port_.isEmpty()) {
          result.port_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Port>();
        }
        super.addAll(values, result.port_);
        return this;
      }
      public Builder clearPort() {
        result.port_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .Sticky note = 3;
      public java.util.List<org.zaluum.runtime.serial.ModelProtos.Sticky> getNoteList() {
        return java.util.Collections.unmodifiableList(result.note_);
      }
      public int getNoteCount() {
        return result.getNoteCount();
      }
      public org.zaluum.runtime.serial.ModelProtos.Sticky getNote(int index) {
        return result.getNote(index);
      }
      public Builder setNote(int index, org.zaluum.runtime.serial.ModelProtos.Sticky value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.note_.set(index, value);
        return this;
      }
      public Builder setNote(int index, org.zaluum.runtime.serial.ModelProtos.Sticky.Builder builderForValue) {
        result.note_.set(index, builderForValue.build());
        return this;
      }
      public Builder addNote(org.zaluum.runtime.serial.ModelProtos.Sticky value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.note_.isEmpty()) {
          result.note_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Sticky>();
        }
        result.note_.add(value);
        return this;
      }
      public Builder addNote(org.zaluum.runtime.serial.ModelProtos.Sticky.Builder builderForValue) {
        if (result.note_.isEmpty()) {
          result.note_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Sticky>();
        }
        result.note_.add(builderForValue.build());
        return this;
      }
      public Builder addAllNote(
          java.lang.Iterable<? extends org.zaluum.runtime.serial.ModelProtos.Sticky> values) {
        if (result.note_.isEmpty()) {
          result.note_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Sticky>();
        }
        super.addAll(values, result.note_);
        return this;
      }
      public Builder clearNote() {
        result.note_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .State state = 4;
      public java.util.List<org.zaluum.runtime.serial.ModelProtos.State> getStateList() {
        return java.util.Collections.unmodifiableList(result.state_);
      }
      public int getStateCount() {
        return result.getStateCount();
      }
      public org.zaluum.runtime.serial.ModelProtos.State getState(int index) {
        return result.getState(index);
      }
      public Builder setState(int index, org.zaluum.runtime.serial.ModelProtos.State value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.state_.set(index, value);
        return this;
      }
      public Builder setState(int index, org.zaluum.runtime.serial.ModelProtos.State.Builder builderForValue) {
        result.state_.set(index, builderForValue.build());
        return this;
      }
      public Builder addState(org.zaluum.runtime.serial.ModelProtos.State value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.state_.isEmpty()) {
          result.state_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.State>();
        }
        result.state_.add(value);
        return this;
      }
      public Builder addState(org.zaluum.runtime.serial.ModelProtos.State.Builder builderForValue) {
        if (result.state_.isEmpty()) {
          result.state_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.State>();
        }
        result.state_.add(builderForValue.build());
        return this;
      }
      public Builder addAllState(
          java.lang.Iterable<? extends org.zaluum.runtime.serial.ModelProtos.State> values) {
        if (result.state_.isEmpty()) {
          result.state_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.State>();
        }
        super.addAll(values, result.state_);
        return this;
      }
      public Builder clearState() {
        result.state_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .Line wire = 5;
      public java.util.List<org.zaluum.runtime.serial.ModelProtos.Line> getWireList() {
        return java.util.Collections.unmodifiableList(result.wire_);
      }
      public int getWireCount() {
        return result.getWireCount();
      }
      public org.zaluum.runtime.serial.ModelProtos.Line getWire(int index) {
        return result.getWire(index);
      }
      public Builder setWire(int index, org.zaluum.runtime.serial.ModelProtos.Line value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.wire_.set(index, value);
        return this;
      }
      public Builder setWire(int index, org.zaluum.runtime.serial.ModelProtos.Line.Builder builderForValue) {
        result.wire_.set(index, builderForValue.build());
        return this;
      }
      public Builder addWire(org.zaluum.runtime.serial.ModelProtos.Line value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.wire_.isEmpty()) {
          result.wire_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Line>();
        }
        result.wire_.add(value);
        return this;
      }
      public Builder addWire(org.zaluum.runtime.serial.ModelProtos.Line.Builder builderForValue) {
        if (result.wire_.isEmpty()) {
          result.wire_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Line>();
        }
        result.wire_.add(builderForValue.build());
        return this;
      }
      public Builder addAllWire(
          java.lang.Iterable<? extends org.zaluum.runtime.serial.ModelProtos.Line> values) {
        if (result.wire_.isEmpty()) {
          result.wire_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Line>();
        }
        super.addAll(values, result.wire_);
        return this;
      }
      public Builder clearWire() {
        result.wire_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .Line transition = 6;
      public java.util.List<org.zaluum.runtime.serial.ModelProtos.Line> getTransitionList() {
        return java.util.Collections.unmodifiableList(result.transition_);
      }
      public int getTransitionCount() {
        return result.getTransitionCount();
      }
      public org.zaluum.runtime.serial.ModelProtos.Line getTransition(int index) {
        return result.getTransition(index);
      }
      public Builder setTransition(int index, org.zaluum.runtime.serial.ModelProtos.Line value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.transition_.set(index, value);
        return this;
      }
      public Builder setTransition(int index, org.zaluum.runtime.serial.ModelProtos.Line.Builder builderForValue) {
        result.transition_.set(index, builderForValue.build());
        return this;
      }
      public Builder addTransition(org.zaluum.runtime.serial.ModelProtos.Line value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.transition_.isEmpty()) {
          result.transition_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Line>();
        }
        result.transition_.add(value);
        return this;
      }
      public Builder addTransition(org.zaluum.runtime.serial.ModelProtos.Line.Builder builderForValue) {
        if (result.transition_.isEmpty()) {
          result.transition_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Line>();
        }
        result.transition_.add(builderForValue.build());
        return this;
      }
      public Builder addAllTransition(
          java.lang.Iterable<? extends org.zaluum.runtime.serial.ModelProtos.Line> values) {
        if (result.transition_.isEmpty()) {
          result.transition_ = new java.util.ArrayList<org.zaluum.runtime.serial.ModelProtos.Line>();
        }
        super.addAll(values, result.transition_);
        return this;
      }
      public Builder clearTransition() {
        result.transition_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:Clipboard)
    }
    
    static {
      defaultInstance = new Clipboard(true);
      org.zaluum.runtime.serial.ModelProtos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Clipboard)
  }
  
  public static final class Sticky extends
      com.google.protobuf.GeneratedMessage {
    // Use Sticky.newBuilder() to construct.
    private Sticky() {
      initFields();
    }
    private Sticky(boolean noInit) {}
    
    private static final Sticky defaultInstance;
    public static Sticky getDefaultInstance() {
      return defaultInstance;
    }
    
    public Sticky getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.zaluum.runtime.serial.ModelProtos.internal_static_Sticky_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.zaluum.runtime.serial.ModelProtos.internal_static_Sticky_fieldAccessorTable;
    }
    
    // required string note = 1;
    public static final int NOTE_FIELD_NUMBER = 1;
    private boolean hasNote;
    private java.lang.String note_ = "";
    public boolean hasNote() { return hasNote; }
    public java.lang.String getNote() { return note_; }
    
    // required .Point position = 2;
    public static final int POSITION_FIELD_NUMBER = 2;
    private boolean hasPosition;
    private org.zaluum.runtime.serial.ModelProtos.Point position_;
    public boolean hasPosition() { return hasPosition; }
    public org.zaluum.runtime.serial.ModelProtos.Point getPosition() { return position_; }
    
    private void initFields() {
      position_ = org.zaluum.runtime.serial.ModelProtos.Point.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasNote) return false;
      if (!hasPosition) return false;
      if (!getPosition().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasNote()) {
        output.writeString(1, getNote());
      }
      if (hasPosition()) {
        output.writeMessage(2, getPosition());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasNote()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getNote());
      }
      if (hasPosition()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPosition());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.zaluum.runtime.serial.ModelProtos.Sticky parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Sticky parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Sticky parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Sticky parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Sticky parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Sticky parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Sticky parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.zaluum.runtime.serial.ModelProtos.Sticky parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.zaluum.runtime.serial.ModelProtos.Sticky parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.zaluum.runtime.serial.ModelProtos.Sticky parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.zaluum.runtime.serial.ModelProtos.Sticky prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.zaluum.runtime.serial.ModelProtos.Sticky result;
      
      // Construct using org.zaluum.runtime.serial.ModelProtos.Sticky.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.zaluum.runtime.serial.ModelProtos.Sticky();
        return builder;
      }
      
      protected org.zaluum.runtime.serial.ModelProtos.Sticky internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.zaluum.runtime.serial.ModelProtos.Sticky();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.zaluum.runtime.serial.ModelProtos.Sticky.getDescriptor();
      }
      
      public org.zaluum.runtime.serial.ModelProtos.Sticky getDefaultInstanceForType() {
        return org.zaluum.runtime.serial.ModelProtos.Sticky.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.zaluum.runtime.serial.ModelProtos.Sticky build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.zaluum.runtime.serial.ModelProtos.Sticky buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.zaluum.runtime.serial.ModelProtos.Sticky buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.zaluum.runtime.serial.ModelProtos.Sticky returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.zaluum.runtime.serial.ModelProtos.Sticky) {
          return mergeFrom((org.zaluum.runtime.serial.ModelProtos.Sticky)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.zaluum.runtime.serial.ModelProtos.Sticky other) {
        if (other == org.zaluum.runtime.serial.ModelProtos.Sticky.getDefaultInstance()) return this;
        if (other.hasNote()) {
          setNote(other.getNote());
        }
        if (other.hasPosition()) {
          mergePosition(other.getPosition());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setNote(input.readString());
              break;
            }
            case 18: {
              org.zaluum.runtime.serial.ModelProtos.Point.Builder subBuilder = org.zaluum.runtime.serial.ModelProtos.Point.newBuilder();
              if (hasPosition()) {
                subBuilder.mergeFrom(getPosition());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setPosition(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string note = 1;
      public boolean hasNote() {
        return result.hasNote();
      }
      public java.lang.String getNote() {
        return result.getNote();
      }
      public Builder setNote(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasNote = true;
        result.note_ = value;
        return this;
      }
      public Builder clearNote() {
        result.hasNote = false;
        result.note_ = getDefaultInstance().getNote();
        return this;
      }
      
      // required .Point position = 2;
      public boolean hasPosition() {
        return result.hasPosition();
      }
      public org.zaluum.runtime.serial.ModelProtos.Point getPosition() {
        return result.getPosition();
      }
      public Builder setPosition(org.zaluum.runtime.serial.ModelProtos.Point value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasPosition = true;
        result.position_ = value;
        return this;
      }
      public Builder setPosition(org.zaluum.runtime.serial.ModelProtos.Point.Builder builderForValue) {
        result.hasPosition = true;
        result.position_ = builderForValue.build();
        return this;
      }
      public Builder mergePosition(org.zaluum.runtime.serial.ModelProtos.Point value) {
        if (result.hasPosition() &&
            result.position_ != org.zaluum.runtime.serial.ModelProtos.Point.getDefaultInstance()) {
          result.position_ =
            org.zaluum.runtime.serial.ModelProtos.Point.newBuilder(result.position_).mergeFrom(value).buildPartial();
        } else {
          result.position_ = value;
        }
        result.hasPosition = true;
        return this;
      }
      public Builder clearPosition() {
        result.hasPosition = false;
        result.position_ = org.zaluum.runtime.serial.ModelProtos.Point.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:Sticky)
    }
    
    static {
      defaultInstance = new Sticky(true);
      org.zaluum.runtime.serial.ModelProtos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Sticky)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ModelFragment_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ModelFragment_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_PortValue_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PortValue_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_DebugValue_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DebugValue_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Point_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Point_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Rectangle_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Rectangle_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Port_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Port_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Bendpoint_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Bendpoint_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Line_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Line_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Box_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Box_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_State_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_State_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Clipboard_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Clipboard_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Sticky_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Sticky_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n%org/zaluum/runtime/serial/model.proto\"" +
      "7\n\rModelFragment\022\016\n\006fqName\030\001 \002(\t\022\026\n\010frag" +
      "ment\030\002 \002(\0132\004.Box\"5\n\tPortValue\022\013\n\003box\030\001 \002" +
      "(\t\022\014\n\004port\030\002 \002(\t\022\r\n\005value\030\003 \002(\t\"7\n\nDebug" +
      "Value\022\016\n\006fqName\030\001 \002(\t\022\031\n\005value\030\002 \003(\0132\n.P" +
      "ortValue\"\035\n\005Point\022\t\n\001x\030\001 \002(\005\022\t\n\001y\030\002 \002(\005\"" +
      "@\n\tRectangle\022\027\n\007left_up\030\001 \002(\0132\006.Point\022\032\n" +
      "\nright_down\030\002 \002(\0132\006.Point\"\203\001\n\004Port\022\014\n\004na" +
      "me\030\001 \002(\t\022\014\n\004type\030\002 \002(\t\022\n\n\002in\030\003 \002(\010\022\016\n\006di" +
      "rect\030\004 \002(\010\022\030\n\010position\030\005 \002(\0132\006.Point\022\014\n\004",
      "slot\030\006 \001(\r\022\014\n\004left\030\007 \001(\010\022\r\n\005label\030\010 \001(\t\"" +
      "C\n\tBendpoint\022\022\n\002p1\030\001 \002(\0132\006.Point\022\022\n\002p2\030\002" +
      " \001(\0132\006.Point\022\016\n\006weight\030\003 \001(\002\"L\n\004Line\022\014\n\004" +
      "from\030\001 \002(\t\022\n\n\002to\030\002 \002(\t\022\035\n\tbendpoint\030\003 \003(" +
      "\0132\n.Bendpoint\022\013\n\003str\030\004 \001(\t\"\332\001\n\003Box\022\n\n\002id" +
      "\030\001 \002(\t\022\026\n\004type\030\002 \002(\0162\010.BoxType\022\032\n\006bounds" +
      "\030\003 \002(\0132\n.Rectangle\022\013\n\003str\030\004 \001(\t\022\023\n\004port\030" +
      "\005 \003(\0132\005.Port\022\023\n\004wire\030\006 \003(\0132\005.Line\022\023\n\005chi" +
      "ld\030\007 \003(\0132\004.Box\022\025\n\005state\030\010 \003(\0132\006.State\022\031\n" +
      "\ntransition\030\t \003(\0132\005.Line\022\025\n\004note\030\n \003(\0132\007",
      ".Sticky\"\177\n\005State\022\n\n\002id\030\001 \002(\t\022\030\n\010position" +
      "\030\002 \002(\0132\006.Point\022\017\n\007initial\030\003 \002(\010\022\024\n\014entry" +
      "_action\030\004 \001(\t\022\023\n\013exit_action\030\005 \001(\t\022\024\n\014in" +
      "put_action\030\006 \001(\t\"\221\001\n\tClipboard\022\021\n\003box\030\001 " +
      "\003(\0132\004.Box\022\023\n\004port\030\002 \003(\0132\005.Port\022\025\n\004note\030\003" +
      " \003(\0132\007.Sticky\022\025\n\005state\030\004 \003(\0132\006.State\022\023\n\004" +
      "wire\030\005 \003(\0132\005.Line\022\031\n\ntransition\030\006 \003(\0132\005." +
      "Line\"0\n\006Sticky\022\014\n\004note\030\001 \002(\t\022\030\n\010position" +
      "\030\002 \002(\0132\006.Point*P\n\007BoxType\022\014\n\010COMPOSED\020\001\022" +
      "\014\n\010INSTANCE\020\002\022\n\n\006SCRIPT\020\003\022\t\n\005VALUE\020\004\022\007\n\003",
      "FSM\020\005\022\t\n\005CONST\020\006B*\n\031org.zaluum.runtime.s" +
      "erialB\013ModelProtosH\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_ModelFragment_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_ModelFragment_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ModelFragment_descriptor,
              new java.lang.String[] { "FqName", "Fragment", },
              org.zaluum.runtime.serial.ModelProtos.ModelFragment.class,
              org.zaluum.runtime.serial.ModelProtos.ModelFragment.Builder.class);
          internal_static_PortValue_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_PortValue_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_PortValue_descriptor,
              new java.lang.String[] { "Box", "Port", "Value", },
              org.zaluum.runtime.serial.ModelProtos.PortValue.class,
              org.zaluum.runtime.serial.ModelProtos.PortValue.Builder.class);
          internal_static_DebugValue_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_DebugValue_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_DebugValue_descriptor,
              new java.lang.String[] { "FqName", "Value", },
              org.zaluum.runtime.serial.ModelProtos.DebugValue.class,
              org.zaluum.runtime.serial.ModelProtos.DebugValue.Builder.class);
          internal_static_Point_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_Point_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Point_descriptor,
              new java.lang.String[] { "X", "Y", },
              org.zaluum.runtime.serial.ModelProtos.Point.class,
              org.zaluum.runtime.serial.ModelProtos.Point.Builder.class);
          internal_static_Rectangle_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_Rectangle_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Rectangle_descriptor,
              new java.lang.String[] { "LeftUp", "RightDown", },
              org.zaluum.runtime.serial.ModelProtos.Rectangle.class,
              org.zaluum.runtime.serial.ModelProtos.Rectangle.Builder.class);
          internal_static_Port_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_Port_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Port_descriptor,
              new java.lang.String[] { "Name", "Type", "In", "Direct", "Position", "Slot", "Left", "Label", },
              org.zaluum.runtime.serial.ModelProtos.Port.class,
              org.zaluum.runtime.serial.ModelProtos.Port.Builder.class);
          internal_static_Bendpoint_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_Bendpoint_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Bendpoint_descriptor,
              new java.lang.String[] { "P1", "P2", "Weight", },
              org.zaluum.runtime.serial.ModelProtos.Bendpoint.class,
              org.zaluum.runtime.serial.ModelProtos.Bendpoint.Builder.class);
          internal_static_Line_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_Line_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Line_descriptor,
              new java.lang.String[] { "From", "To", "Bendpoint", "Str", },
              org.zaluum.runtime.serial.ModelProtos.Line.class,
              org.zaluum.runtime.serial.ModelProtos.Line.Builder.class);
          internal_static_Box_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_Box_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Box_descriptor,
              new java.lang.String[] { "Id", "Type", "Bounds", "Str", "Port", "Wire", "Child", "State", "Transition", "Note", },
              org.zaluum.runtime.serial.ModelProtos.Box.class,
              org.zaluum.runtime.serial.ModelProtos.Box.Builder.class);
          internal_static_State_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_State_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_State_descriptor,
              new java.lang.String[] { "Id", "Position", "Initial", "EntryAction", "ExitAction", "InputAction", },
              org.zaluum.runtime.serial.ModelProtos.State.class,
              org.zaluum.runtime.serial.ModelProtos.State.Builder.class);
          internal_static_Clipboard_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_Clipboard_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Clipboard_descriptor,
              new java.lang.String[] { "Box", "Port", "Note", "State", "Wire", "Transition", },
              org.zaluum.runtime.serial.ModelProtos.Clipboard.class,
              org.zaluum.runtime.serial.ModelProtos.Clipboard.Builder.class);
          internal_static_Sticky_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_Sticky_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Sticky_descriptor,
              new java.lang.String[] { "Note", "Position", },
              org.zaluum.runtime.serial.ModelProtos.Sticky.class,
              org.zaluum.runtime.serial.ModelProtos.Sticky.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
